<?xml version="1.0" encoding="utf-8" standalone="no"?>
<test-results xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="nunit_schema_2.5.xsd" name="Pester" total="880" errors="0" failures="0" not-run="0" inconclusive="0" ignored="0" skipped="0" invalid="0" date="2018-09-24" time="16:33:15">
  <environment user="sander" machine-name="STADPC" cwd="Development:\PowerShell\PSDatabaseClone" user-domain="STADPC" platform="Microsoft Windows 10 Pro|C:\WINDOWS|\Device\Harddisk0\Partition4" nunit-version="2.5.8.0" os-version="10.0.17134" clr-version="4.0.30319.42000" />
  <culture-info current-culture="en-US" current-uiculture="en-US" />
  <test-suite type="TestFixture" name="Pester" executed="True" result="Success" success="True" time="13.0259" asserts="0" description="Pester">
    <results>
      <test-suite type="TestFixture" name="C:\Users\sande\OneDrive\_Development\PowerShell\PSDatabaseClone\PSDatabaseClone\tests\general\PSScriptAnalyzer.Tests.ps1" executed="True" result="Success" success="True" time="13.0259" asserts="0" description="C:\Users\sande\OneDrive\_Development\PowerShell\PSDatabaseClone\PSDatabaseClone\tests\general\PSScriptAnalyzer.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Invoking PSScriptAnalyzer against commandbase" executed="True" result="Success" success="True" time="13.0259" asserts="0" description="Invoking PSScriptAnalyzer against commandbase">
            <results>
              <test-suite type="TestFixture" name="Analyzing Get-PSDCClone" executed="True" result="Success" success="True" time="0.9227" asserts="0" description="Analyzing Get-PSDCClone">
                <results>
                  <test-case description="Should pass PSAlignAssignmentStatement" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCClone.Should pass PSAlignAssignmentStatement" time="0.3188" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingCmdletAliases" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCClone.Should pass PSAvoidUsingCmdletAliases" time="0.0099" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidAssignmentToAutomaticVariable" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCClone.Should pass PSAvoidAssignmentToAutomaticVariable" time="0.0075" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidDefaultValueSwitchParameter" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCClone.Should pass PSAvoidDefaultValueSwitchParameter" time="0.0079" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidDefaultValueForMandatoryParameter" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCClone.Should pass PSAvoidDefaultValueForMandatoryParameter" time="0.0085" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingEmptyCatchBlock" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCClone.Should pass PSAvoidUsingEmptyCatchBlock" time="0.0084" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalAliases" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCClone.Should pass PSAvoidGlobalAliases" time="0.0085" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalFunctions" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCClone.Should pass PSAvoidGlobalFunctions" time="0.0085" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalVars" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCClone.Should pass PSAvoidGlobalVars" time="0.0084" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidInvokingEmptyMembers" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCClone.Should pass PSAvoidInvokingEmptyMembers" time="0.0085" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidNullOrEmptyHelpMessageAttribute" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCClone.Should pass PSAvoidNullOrEmptyHelpMessageAttribute" time="0.0086" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingPositionalParameters" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCClone.Should pass PSAvoidUsingPositionalParameters" time="0.0087" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSReservedCmdletChar" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCClone.Should pass PSReservedCmdletChar" time="0.0089" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSReservedParams" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCClone.Should pass PSReservedParams" time="0.0195" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidShouldContinueWithoutForce" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCClone.Should pass PSAvoidShouldContinueWithoutForce" time="0.0138" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidTrailingWhitespace" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCClone.Should pass PSAvoidTrailingWhitespace" time="0.0135" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingUserNameAndPassWordParams" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCClone.Should pass PSAvoidUsingUserNameAndPassWordParams" time="0.0079" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingComputerNameHardcoded" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCClone.Should pass PSAvoidUsingComputerNameHardcoded" time="0.0164" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingConvertToSecureStringWithPlainText" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCClone.Should pass PSAvoidUsingConvertToSecureStringWithPlainText" time="0.0169" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingDeprecatedManifestFields" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCClone.Should pass PSAvoidUsingDeprecatedManifestFields" time="0.008" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingInvokeExpression" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCClone.Should pass PSAvoidUsingInvokeExpression" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingPlainTextForPassword" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCClone.Should pass PSAvoidUsingPlainTextForPassword" time="0.0145" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingWMICmdlet" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCClone.Should pass PSAvoidUsingWMICmdlet" time="0.0135" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingWriteHost" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCClone.Should pass PSAvoidUsingWriteHost" time="0.0085" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSMisleadingBacktick" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCClone.Should pass PSMisleadingBacktick" time="0.0135" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSMissingModuleManifestField" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCClone.Should pass PSMissingModuleManifestField" time="0.0081" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPlaceCloseBrace" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCClone.Should pass PSPlaceCloseBrace" time="0.013" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPlaceOpenBrace" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCClone.Should pass PSPlaceOpenBrace" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectComparisonWithNull" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCClone.Should pass PSPossibleIncorrectComparisonWithNull" time="0.0127" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectUsageOfAssignmentOperator" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCClone.Should pass PSPossibleIncorrectUsageOfAssignmentOperator" time="0.0153" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectUsageOfRedirectionOperator" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCClone.Should pass PSPossibleIncorrectUsageOfRedirectionOperator" time="0.0083" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSProvideCommentHelp" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCClone.Should pass PSProvideCommentHelp" time="0.0138" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseApprovedVerbs" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCClone.Should pass PSUseApprovedVerbs" time="0.008" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseBOMForUnicodeEncodedFile" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCClone.Should pass PSUseBOMForUnicodeEncodedFile" time="0.0132" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseCmdletCorrectly" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCClone.Should pass PSUseCmdletCorrectly" time="0.0097" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseCompatibleCmdlets" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCClone.Should pass PSUseCompatibleCmdlets" time="0.0136" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseConsistentIndentation" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCClone.Should pass PSUseConsistentIndentation" time="0.0128" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseConsistentWhitespace" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCClone.Should pass PSUseConsistentWhitespace" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseDeclaredVarsMoreThanAssignments" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCClone.Should pass PSUseDeclaredVarsMoreThanAssignments" time="0.0132" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseLiteralInitializerForHashtable" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCClone.Should pass PSUseLiteralInitializerForHashtable" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseOutputTypeCorrectly" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCClone.Should pass PSUseOutputTypeCorrectly" time="0.0127" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUsePSCredentialType" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCClone.Should pass PSUsePSCredentialType" time="0.0127" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSShouldProcess" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCClone.Should pass PSShouldProcess" time="0.0076" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseShouldProcessForStateChangingFunctions" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCClone.Should pass PSUseShouldProcessForStateChangingFunctions" time="0.013" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseSingularNouns" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCClone.Should pass PSUseSingularNouns" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseSupportsShouldProcess" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCClone.Should pass PSUseSupportsShouldProcess" time="0.0203" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseToExportFieldsInManifest" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCClone.Should pass PSUseToExportFieldsInManifest" time="0.0138" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseUTF8EncodingForHelpFile" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCClone.Should pass PSUseUTF8EncodingForHelpFile" time="0.0144" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCDscExamplesPresent" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCClone.Should pass PSDSCDscExamplesPresent" time="0.013" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCDscTestsPresent" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCClone.Should pass PSDSCDscTestsPresent" time="0.0135" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCReturnCorrectTypesForDSCFunctions" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCClone.Should pass PSDSCReturnCorrectTypesForDSCFunctions" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseIdenticalMandatoryParametersForDSC" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCClone.Should pass PSDSCUseIdenticalMandatoryParametersForDSC" time="0.0129" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseIdenticalParametersForDSC" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCClone.Should pass PSDSCUseIdenticalParametersForDSC" time="0.0129" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCStandardDSCFunctionsInResource" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCClone.Should pass PSDSCStandardDSCFunctionsInResource" time="0.008" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseVerboseMessageInDSCResource" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCClone.Should pass PSDSCUseVerboseMessageInDSCResource" time="0.013" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Analyzing Invoke-PSDCRepairClone" executed="True" result="Success" success="True" time="0.8915" asserts="0" description="Analyzing Invoke-PSDCRepairClone">
                <results>
                  <test-case description="Should pass PSAlignAssignmentStatement" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCRepairClone.Should pass PSAlignAssignmentStatement" time="0.2976" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingCmdletAliases" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCRepairClone.Should pass PSAvoidUsingCmdletAliases" time="0.0119" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidAssignmentToAutomaticVariable" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCRepairClone.Should pass PSAvoidAssignmentToAutomaticVariable" time="0.0095" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidDefaultValueSwitchParameter" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCRepairClone.Should pass PSAvoidDefaultValueSwitchParameter" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidDefaultValueForMandatoryParameter" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCRepairClone.Should pass PSAvoidDefaultValueForMandatoryParameter" time="0.0089" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingEmptyCatchBlock" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCRepairClone.Should pass PSAvoidUsingEmptyCatchBlock" time="0.009" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalAliases" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCRepairClone.Should pass PSAvoidGlobalAliases" time="0.0093" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalFunctions" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCRepairClone.Should pass PSAvoidGlobalFunctions" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalVars" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCRepairClone.Should pass PSAvoidGlobalVars" time="0.0087" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidInvokingEmptyMembers" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCRepairClone.Should pass PSAvoidInvokingEmptyMembers" time="0.0085" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidNullOrEmptyHelpMessageAttribute" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCRepairClone.Should pass PSAvoidNullOrEmptyHelpMessageAttribute" time="0.0086" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingPositionalParameters" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCRepairClone.Should pass PSAvoidUsingPositionalParameters" time="0.0088" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSReservedCmdletChar" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCRepairClone.Should pass PSReservedCmdletChar" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSReservedParams" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCRepairClone.Should pass PSReservedParams" time="0.0088" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidShouldContinueWithoutForce" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCRepairClone.Should pass PSAvoidShouldContinueWithoutForce" time="0.0201" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidTrailingWhitespace" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCRepairClone.Should pass PSAvoidTrailingWhitespace" time="0.0082" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingUserNameAndPassWordParams" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCRepairClone.Should pass PSAvoidUsingUserNameAndPassWordParams" time="0.0131" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingComputerNameHardcoded" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCRepairClone.Should pass PSAvoidUsingComputerNameHardcoded" time="0.0125" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingConvertToSecureStringWithPlainText" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCRepairClone.Should pass PSAvoidUsingConvertToSecureStringWithPlainText" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingDeprecatedManifestFields" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCRepairClone.Should pass PSAvoidUsingDeprecatedManifestFields" time="0.0129" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingInvokeExpression" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCRepairClone.Should pass PSAvoidUsingInvokeExpression" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingPlainTextForPassword" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCRepairClone.Should pass PSAvoidUsingPlainTextForPassword" time="0.0127" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingWMICmdlet" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCRepairClone.Should pass PSAvoidUsingWMICmdlet" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingWriteHost" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCRepairClone.Should pass PSAvoidUsingWriteHost" time="0.0128" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSMisleadingBacktick" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCRepairClone.Should pass PSMisleadingBacktick" time="0.013" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSMissingModuleManifestField" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCRepairClone.Should pass PSMissingModuleManifestField" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPlaceCloseBrace" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCRepairClone.Should pass PSPlaceCloseBrace" time="0.0128" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPlaceOpenBrace" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCRepairClone.Should pass PSPlaceOpenBrace" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectComparisonWithNull" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCRepairClone.Should pass PSPossibleIncorrectComparisonWithNull" time="0.0129" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectUsageOfAssignmentOperator" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCRepairClone.Should pass PSPossibleIncorrectUsageOfAssignmentOperator" time="0.0136" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectUsageOfRedirectionOperator" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCRepairClone.Should pass PSPossibleIncorrectUsageOfRedirectionOperator" time="0.0082" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSProvideCommentHelp" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCRepairClone.Should pass PSProvideCommentHelp" time="0.0137" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseApprovedVerbs" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCRepairClone.Should pass PSUseApprovedVerbs" time="0.0136" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseBOMForUnicodeEncodedFile" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCRepairClone.Should pass PSUseBOMForUnicodeEncodedFile" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseCmdletCorrectly" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCRepairClone.Should pass PSUseCmdletCorrectly" time="0.0081" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseCompatibleCmdlets" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCRepairClone.Should pass PSUseCompatibleCmdlets" time="0.0084" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseConsistentIndentation" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCRepairClone.Should pass PSUseConsistentIndentation" time="0.0209" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseConsistentWhitespace" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCRepairClone.Should pass PSUseConsistentWhitespace" time="0.008" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseDeclaredVarsMoreThanAssignments" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCRepairClone.Should pass PSUseDeclaredVarsMoreThanAssignments" time="0.0131" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseLiteralInitializerForHashtable" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCRepairClone.Should pass PSUseLiteralInitializerForHashtable" time="0.0131" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseOutputTypeCorrectly" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCRepairClone.Should pass PSUseOutputTypeCorrectly" time="0.008" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUsePSCredentialType" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCRepairClone.Should pass PSUsePSCredentialType" time="0.0133" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSShouldProcess" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCRepairClone.Should pass PSShouldProcess" time="0.0079" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseShouldProcessForStateChangingFunctions" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCRepairClone.Should pass PSUseShouldProcessForStateChangingFunctions" time="0.0136" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseSingularNouns" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCRepairClone.Should pass PSUseSingularNouns" time="0.0076" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseSupportsShouldProcess" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCRepairClone.Should pass PSUseSupportsShouldProcess" time="0.0126" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseToExportFieldsInManifest" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCRepairClone.Should pass PSUseToExportFieldsInManifest" time="0.0132" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseUTF8EncodingForHelpFile" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCRepairClone.Should pass PSUseUTF8EncodingForHelpFile" time="0.0079" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCDscExamplesPresent" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCRepairClone.Should pass PSDSCDscExamplesPresent" time="0.0139" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCDscTestsPresent" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCRepairClone.Should pass PSDSCDscTestsPresent" time="0.0138" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCReturnCorrectTypesForDSCFunctions" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCRepairClone.Should pass PSDSCReturnCorrectTypesForDSCFunctions" time="0.0141" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseIdenticalMandatoryParametersForDSC" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCRepairClone.Should pass PSDSCUseIdenticalMandatoryParametersForDSC" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseIdenticalParametersForDSC" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCRepairClone.Should pass PSDSCUseIdenticalParametersForDSC" time="0.0076" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCStandardDSCFunctionsInResource" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCRepairClone.Should pass PSDSCStandardDSCFunctionsInResource" time="0.0137" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseVerboseMessageInDSCResource" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCRepairClone.Should pass PSDSCUseVerboseMessageInDSCResource" time="0.0144" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Analyzing New-PSDCClone" executed="True" result="Success" success="True" time="1.1801" asserts="0" description="Analyzing New-PSDCClone">
                <results>
                  <test-case description="Should pass PSAlignAssignmentStatement" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCClone.Should pass PSAlignAssignmentStatement" time="0.6295" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingCmdletAliases" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCClone.Should pass PSAvoidUsingCmdletAliases" time="0.0099" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidAssignmentToAutomaticVariable" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCClone.Should pass PSAvoidAssignmentToAutomaticVariable" time="0.008" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidDefaultValueSwitchParameter" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCClone.Should pass PSAvoidDefaultValueSwitchParameter" time="0.0089" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidDefaultValueForMandatoryParameter" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCClone.Should pass PSAvoidDefaultValueForMandatoryParameter" time="0.0086" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingEmptyCatchBlock" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCClone.Should pass PSAvoidUsingEmptyCatchBlock" time="0.0086" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalAliases" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCClone.Should pass PSAvoidGlobalAliases" time="0.0087" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalFunctions" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCClone.Should pass PSAvoidGlobalFunctions" time="0.0085" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalVars" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCClone.Should pass PSAvoidGlobalVars" time="0.0086" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidInvokingEmptyMembers" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCClone.Should pass PSAvoidInvokingEmptyMembers" time="0.0085" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidNullOrEmptyHelpMessageAttribute" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCClone.Should pass PSAvoidNullOrEmptyHelpMessageAttribute" time="0.0087" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingPositionalParameters" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCClone.Should pass PSAvoidUsingPositionalParameters" time="0.0089" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSReservedCmdletChar" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCClone.Should pass PSReservedCmdletChar" time="0.0191" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSReservedParams" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCClone.Should pass PSReservedParams" time="0.0076" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidShouldContinueWithoutForce" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCClone.Should pass PSAvoidShouldContinueWithoutForce" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidTrailingWhitespace" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCClone.Should pass PSAvoidTrailingWhitespace" time="0.0081" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingUserNameAndPassWordParams" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCClone.Should pass PSAvoidUsingUserNameAndPassWordParams" time="0.0079" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingComputerNameHardcoded" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCClone.Should pass PSAvoidUsingComputerNameHardcoded" time="0.0079" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingConvertToSecureStringWithPlainText" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCClone.Should pass PSAvoidUsingConvertToSecureStringWithPlainText" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingDeprecatedManifestFields" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCClone.Should pass PSAvoidUsingDeprecatedManifestFields" time="0.0076" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingInvokeExpression" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCClone.Should pass PSAvoidUsingInvokeExpression" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingPlainTextForPassword" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCClone.Should pass PSAvoidUsingPlainTextForPassword" time="0.0076" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingWMICmdlet" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCClone.Should pass PSAvoidUsingWMICmdlet" time="0.0142" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingWriteHost" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCClone.Should pass PSAvoidUsingWriteHost" time="0.0131" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSMisleadingBacktick" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCClone.Should pass PSMisleadingBacktick" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSMissingModuleManifestField" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCClone.Should pass PSMissingModuleManifestField" time="0.0076" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPlaceCloseBrace" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCClone.Should pass PSPlaceCloseBrace" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPlaceOpenBrace" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCClone.Should pass PSPlaceOpenBrace" time="0.0128" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectComparisonWithNull" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCClone.Should pass PSPossibleIncorrectComparisonWithNull" time="0.0079" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectUsageOfAssignmentOperator" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCClone.Should pass PSPossibleIncorrectUsageOfAssignmentOperator" time="0.0127" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectUsageOfRedirectionOperator" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCClone.Should pass PSPossibleIncorrectUsageOfRedirectionOperator" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSProvideCommentHelp" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCClone.Should pass PSProvideCommentHelp" time="0.0128" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseApprovedVerbs" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCClone.Should pass PSUseApprovedVerbs" time="0.013" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseBOMForUnicodeEncodedFile" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCClone.Should pass PSUseBOMForUnicodeEncodedFile" time="0.0076" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseCmdletCorrectly" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCClone.Should pass PSUseCmdletCorrectly" time="0.0127" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseCompatibleCmdlets" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCClone.Should pass PSUseCompatibleCmdlets" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseConsistentIndentation" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCClone.Should pass PSUseConsistentIndentation" time="0.0128" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseConsistentWhitespace" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCClone.Should pass PSUseConsistentWhitespace" time="0.013" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseDeclaredVarsMoreThanAssignments" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCClone.Should pass PSUseDeclaredVarsMoreThanAssignments" time="0.0087" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseLiteralInitializerForHashtable" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCClone.Should pass PSUseLiteralInitializerForHashtable" time="0.0149" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseOutputTypeCorrectly" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCClone.Should pass PSUseOutputTypeCorrectly" time="0.0083" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUsePSCredentialType" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCClone.Should pass PSUsePSCredentialType" time="0.0136" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSShouldProcess" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCClone.Should pass PSShouldProcess" time="0.0079" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseShouldProcessForStateChangingFunctions" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCClone.Should pass PSUseShouldProcessForStateChangingFunctions" time="0.0133" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseSingularNouns" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCClone.Should pass PSUseSingularNouns" time="0.0132" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseSupportsShouldProcess" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCClone.Should pass PSUseSupportsShouldProcess" time="0.0079" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseToExportFieldsInManifest" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCClone.Should pass PSUseToExportFieldsInManifest" time="0.0133" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseUTF8EncodingForHelpFile" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCClone.Should pass PSUseUTF8EncodingForHelpFile" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCDscExamplesPresent" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCClone.Should pass PSDSCDscExamplesPresent" time="0.013" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCDscTestsPresent" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCClone.Should pass PSDSCDscTestsPresent" time="0.008" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCReturnCorrectTypesForDSCFunctions" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCClone.Should pass PSDSCReturnCorrectTypesForDSCFunctions" time="0.0128" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseIdenticalMandatoryParametersForDSC" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCClone.Should pass PSDSCUseIdenticalMandatoryParametersForDSC" time="0.0081" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseIdenticalParametersForDSC" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCClone.Should pass PSDSCUseIdenticalParametersForDSC" time="0.0133" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCStandardDSCFunctionsInResource" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCClone.Should pass PSDSCStandardDSCFunctionsInResource" time="0.0129" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseVerboseMessageInDSCResource" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCClone.Should pass PSDSCUseVerboseMessageInDSCResource" time="0.0079" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Analyzing Remove-PSDCClone" executed="True" result="Success" success="True" time="0.8686" asserts="0" description="Analyzing Remove-PSDCClone">
                <results>
                  <test-case description="Should pass PSAlignAssignmentStatement" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCClone.Should pass PSAlignAssignmentStatement" time="0.2907" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingCmdletAliases" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCClone.Should pass PSAvoidUsingCmdletAliases" time="0.0093" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidAssignmentToAutomaticVariable" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCClone.Should pass PSAvoidAssignmentToAutomaticVariable" time="0.0079" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidDefaultValueSwitchParameter" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCClone.Should pass PSAvoidDefaultValueSwitchParameter" time="0.0076" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidDefaultValueForMandatoryParameter" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCClone.Should pass PSAvoidDefaultValueForMandatoryParameter" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingEmptyCatchBlock" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCClone.Should pass PSAvoidUsingEmptyCatchBlock" time="0.0083" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalAliases" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCClone.Should pass PSAvoidGlobalAliases" time="0.0085" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalFunctions" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCClone.Should pass PSAvoidGlobalFunctions" time="0.0088" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalVars" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCClone.Should pass PSAvoidGlobalVars" time="0.0087" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidInvokingEmptyMembers" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCClone.Should pass PSAvoidInvokingEmptyMembers" time="0.0086" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidNullOrEmptyHelpMessageAttribute" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCClone.Should pass PSAvoidNullOrEmptyHelpMessageAttribute" time="0.0088" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingPositionalParameters" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCClone.Should pass PSAvoidUsingPositionalParameters" time="0.0089" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSReservedCmdletChar" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCClone.Should pass PSReservedCmdletChar" time="0.0087" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSReservedParams" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCClone.Should pass PSReservedParams" time="0.0093" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidShouldContinueWithoutForce" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCClone.Should pass PSAvoidShouldContinueWithoutForce" time="0.0197" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidTrailingWhitespace" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCClone.Should pass PSAvoidTrailingWhitespace" time="0.0083" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingUserNameAndPassWordParams" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCClone.Should pass PSAvoidUsingUserNameAndPassWordParams" time="0.0136" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingComputerNameHardcoded" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCClone.Should pass PSAvoidUsingComputerNameHardcoded" time="0.0081" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingConvertToSecureStringWithPlainText" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCClone.Should pass PSAvoidUsingConvertToSecureStringWithPlainText" time="0.0144" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingDeprecatedManifestFields" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCClone.Should pass PSAvoidUsingDeprecatedManifestFields" time="0.0133" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingInvokeExpression" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCClone.Should pass PSAvoidUsingInvokeExpression" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingPlainTextForPassword" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCClone.Should pass PSAvoidUsingPlainTextForPassword" time="0.0129" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingWMICmdlet" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCClone.Should pass PSAvoidUsingWMICmdlet" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingWriteHost" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCClone.Should pass PSAvoidUsingWriteHost" time="0.0132" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSMisleadingBacktick" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCClone.Should pass PSMisleadingBacktick" time="0.0127" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSMissingModuleManifestField" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCClone.Should pass PSMissingModuleManifestField" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPlaceCloseBrace" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCClone.Should pass PSPlaceCloseBrace" time="0.0128" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPlaceOpenBrace" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCClone.Should pass PSPlaceOpenBrace" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectComparisonWithNull" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCClone.Should pass PSPossibleIncorrectComparisonWithNull" time="0.0129" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectUsageOfAssignmentOperator" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCClone.Should pass PSPossibleIncorrectUsageOfAssignmentOperator" time="0.0079" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectUsageOfRedirectionOperator" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCClone.Should pass PSPossibleIncorrectUsageOfRedirectionOperator" time="0.0128" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSProvideCommentHelp" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCClone.Should pass PSProvideCommentHelp" time="0.0129" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseApprovedVerbs" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCClone.Should pass PSUseApprovedVerbs" time="0.0076" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseBOMForUnicodeEncodedFile" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCClone.Should pass PSUseBOMForUnicodeEncodedFile" time="0.0074" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseCmdletCorrectly" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCClone.Should pass PSUseCmdletCorrectly" time="0.0134" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseCompatibleCmdlets" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCClone.Should pass PSUseCompatibleCmdlets" time="0.0133" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseConsistentIndentation" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCClone.Should pass PSUseConsistentIndentation" time="0.0145" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseConsistentWhitespace" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCClone.Should pass PSUseConsistentWhitespace" time="0.0108" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseDeclaredVarsMoreThanAssignments" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCClone.Should pass PSUseDeclaredVarsMoreThanAssignments" time="0.0138" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseLiteralInitializerForHashtable" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCClone.Should pass PSUseLiteralInitializerForHashtable" time="0.016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseOutputTypeCorrectly" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCClone.Should pass PSUseOutputTypeCorrectly" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUsePSCredentialType" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCClone.Should pass PSUsePSCredentialType" time="0.0075" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSShouldProcess" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCClone.Should pass PSShouldProcess" time="0.0132" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseShouldProcessForStateChangingFunctions" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCClone.Should pass PSUseShouldProcessForStateChangingFunctions" time="0.0076" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseSingularNouns" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCClone.Should pass PSUseSingularNouns" time="0.0127" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseSupportsShouldProcess" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCClone.Should pass PSUseSupportsShouldProcess" time="0.0132" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseToExportFieldsInManifest" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCClone.Should pass PSUseToExportFieldsInManifest" time="0.0076" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseUTF8EncodingForHelpFile" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCClone.Should pass PSUseUTF8EncodingForHelpFile" time="0.013" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCDscExamplesPresent" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCClone.Should pass PSDSCDscExamplesPresent" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCDscTestsPresent" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCClone.Should pass PSDSCDscTestsPresent" time="0.0133" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCReturnCorrectTypesForDSCFunctions" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCClone.Should pass PSDSCReturnCorrectTypesForDSCFunctions" time="0.0135" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseIdenticalMandatoryParametersForDSC" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCClone.Should pass PSDSCUseIdenticalMandatoryParametersForDSC" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseIdenticalParametersForDSC" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCClone.Should pass PSDSCUseIdenticalParametersForDSC" time="0.0137" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCStandardDSCFunctionsInResource" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCClone.Should pass PSDSCStandardDSCFunctionsInResource" time="0.0085" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseVerboseMessageInDSCResource" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCClone.Should pass PSDSCUseVerboseMessageInDSCResource" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Analyzing Invoke-PSDCDataMasking" executed="True" result="Success" success="True" time="0.6893" asserts="0" description="Analyzing Invoke-PSDCDataMasking">
                <results>
                  <test-case description="Should pass PSAlignAssignmentStatement" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCDataMasking.Should pass PSAlignAssignmentStatement" time="0.1159" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingCmdletAliases" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCDataMasking.Should pass PSAvoidUsingCmdletAliases" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidAssignmentToAutomaticVariable" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCDataMasking.Should pass PSAvoidAssignmentToAutomaticVariable" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidDefaultValueSwitchParameter" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCDataMasking.Should pass PSAvoidDefaultValueSwitchParameter" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidDefaultValueForMandatoryParameter" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCDataMasking.Should pass PSAvoidDefaultValueForMandatoryParameter" time="0.0133" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingEmptyCatchBlock" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCDataMasking.Should pass PSAvoidUsingEmptyCatchBlock" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalAliases" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCDataMasking.Should pass PSAvoidGlobalAliases" time="0.0129" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalFunctions" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCDataMasking.Should pass PSAvoidGlobalFunctions" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalVars" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCDataMasking.Should pass PSAvoidGlobalVars" time="0.013" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidInvokingEmptyMembers" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCDataMasking.Should pass PSAvoidInvokingEmptyMembers" time="0.0134" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidNullOrEmptyHelpMessageAttribute" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCDataMasking.Should pass PSAvoidNullOrEmptyHelpMessageAttribute" time="0.0079" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingPositionalParameters" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCDataMasking.Should pass PSAvoidUsingPositionalParameters" time="0.0131" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSReservedCmdletChar" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCDataMasking.Should pass PSReservedCmdletChar" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSReservedParams" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCDataMasking.Should pass PSReservedParams" time="0.0132" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidShouldContinueWithoutForce" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCDataMasking.Should pass PSAvoidShouldContinueWithoutForce" time="0.0131" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidTrailingWhitespace" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCDataMasking.Should pass PSAvoidTrailingWhitespace" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingUserNameAndPassWordParams" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCDataMasking.Should pass PSAvoidUsingUserNameAndPassWordParams" time="0.013" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingComputerNameHardcoded" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCDataMasking.Should pass PSAvoidUsingComputerNameHardcoded" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingConvertToSecureStringWithPlainText" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCDataMasking.Should pass PSAvoidUsingConvertToSecureStringWithPlainText" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingDeprecatedManifestFields" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCDataMasking.Should pass PSAvoidUsingDeprecatedManifestFields" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingInvokeExpression" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCDataMasking.Should pass PSAvoidUsingInvokeExpression" time="0.0147" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingPlainTextForPassword" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCDataMasking.Should pass PSAvoidUsingPlainTextForPassword" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingWMICmdlet" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCDataMasking.Should pass PSAvoidUsingWMICmdlet" time="0.0127" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingWriteHost" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCDataMasking.Should pass PSAvoidUsingWriteHost" time="0.0126" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSMisleadingBacktick" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCDataMasking.Should pass PSMisleadingBacktick" time="0.0076" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSMissingModuleManifestField" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCDataMasking.Should pass PSMissingModuleManifestField" time="0.0126" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPlaceCloseBrace" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCDataMasking.Should pass PSPlaceCloseBrace" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPlaceOpenBrace" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCDataMasking.Should pass PSPlaceOpenBrace" time="0.0129" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectComparisonWithNull" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCDataMasking.Should pass PSPossibleIncorrectComparisonWithNull" time="0.0075" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectUsageOfAssignmentOperator" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCDataMasking.Should pass PSPossibleIncorrectUsageOfAssignmentOperator" time="0.0127" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectUsageOfRedirectionOperator" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCDataMasking.Should pass PSPossibleIncorrectUsageOfRedirectionOperator" time="0.0128" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSProvideCommentHelp" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCDataMasking.Should pass PSProvideCommentHelp" time="0.0079" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseApprovedVerbs" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCDataMasking.Should pass PSUseApprovedVerbs" time="0.0133" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseBOMForUnicodeEncodedFile" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCDataMasking.Should pass PSUseBOMForUnicodeEncodedFile" time="0.0076" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseCmdletCorrectly" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCDataMasking.Should pass PSUseCmdletCorrectly" time="0.0127" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseCompatibleCmdlets" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCDataMasking.Should pass PSUseCompatibleCmdlets" time="0.0129" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseConsistentIndentation" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCDataMasking.Should pass PSUseConsistentIndentation" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseConsistentWhitespace" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCDataMasking.Should pass PSUseConsistentWhitespace" time="0.0127" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseDeclaredVarsMoreThanAssignments" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCDataMasking.Should pass PSUseDeclaredVarsMoreThanAssignments" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseLiteralInitializerForHashtable" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCDataMasking.Should pass PSUseLiteralInitializerForHashtable" time="0.0126" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseOutputTypeCorrectly" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCDataMasking.Should pass PSUseOutputTypeCorrectly" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUsePSCredentialType" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCDataMasking.Should pass PSUsePSCredentialType" time="0.0132" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSShouldProcess" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCDataMasking.Should pass PSShouldProcess" time="0.0126" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseShouldProcessForStateChangingFunctions" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCDataMasking.Should pass PSUseShouldProcessForStateChangingFunctions" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseSingularNouns" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCDataMasking.Should pass PSUseSingularNouns" time="0.0127" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseSupportsShouldProcess" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCDataMasking.Should pass PSUseSupportsShouldProcess" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseToExportFieldsInManifest" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCDataMasking.Should pass PSUseToExportFieldsInManifest" time="0.0127" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseUTF8EncodingForHelpFile" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCDataMasking.Should pass PSUseUTF8EncodingForHelpFile" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCDscExamplesPresent" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCDataMasking.Should pass PSDSCDscExamplesPresent" time="0.0134" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCDscTestsPresent" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCDataMasking.Should pass PSDSCDscTestsPresent" time="0.0134" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCReturnCorrectTypesForDSCFunctions" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCDataMasking.Should pass PSDSCReturnCorrectTypesForDSCFunctions" time="0.0079" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseIdenticalMandatoryParametersForDSC" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCDataMasking.Should pass PSDSCUseIdenticalMandatoryParametersForDSC" time="0.0129" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseIdenticalParametersForDSC" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCDataMasking.Should pass PSDSCUseIdenticalParametersForDSC" time="0.0079" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCStandardDSCFunctionsInResource" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCDataMasking.Should pass PSDSCStandardDSCFunctionsInResource" time="0.0132" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseVerboseMessageInDSCResource" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Invoke-PSDCDataMasking.Should pass PSDSCUseVerboseMessageInDSCResource" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Analyzing New-PSDCMaskingConfiguration" executed="True" result="Success" success="True" time="0.6939" asserts="0" description="Analyzing New-PSDCMaskingConfiguration">
                <results>
                  <test-case description="Should pass PSAlignAssignmentStatement" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCMaskingConfiguration.Should pass PSAlignAssignmentStatement" time="0.1124" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingCmdletAliases" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCMaskingConfiguration.Should pass PSAvoidUsingCmdletAliases" time="0.0076" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidAssignmentToAutomaticVariable" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCMaskingConfiguration.Should pass PSAvoidAssignmentToAutomaticVariable" time="0.0079" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidDefaultValueSwitchParameter" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCMaskingConfiguration.Should pass PSAvoidDefaultValueSwitchParameter" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidDefaultValueForMandatoryParameter" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCMaskingConfiguration.Should pass PSAvoidDefaultValueForMandatoryParameter" time="0.0075" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingEmptyCatchBlock" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCMaskingConfiguration.Should pass PSAvoidUsingEmptyCatchBlock" time="0.0079" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalAliases" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCMaskingConfiguration.Should pass PSAvoidGlobalAliases" time="0.0148" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalFunctions" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCMaskingConfiguration.Should pass PSAvoidGlobalFunctions" time="0.017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalVars" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCMaskingConfiguration.Should pass PSAvoidGlobalVars" time="0.0079" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidInvokingEmptyMembers" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCMaskingConfiguration.Should pass PSAvoidInvokingEmptyMembers" time="0.0137" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidNullOrEmptyHelpMessageAttribute" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCMaskingConfiguration.Should pass PSAvoidNullOrEmptyHelpMessageAttribute" time="0.0079" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingPositionalParameters" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCMaskingConfiguration.Should pass PSAvoidUsingPositionalParameters" time="0.0132" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSReservedCmdletChar" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCMaskingConfiguration.Should pass PSReservedCmdletChar" time="0.0129" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSReservedParams" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCMaskingConfiguration.Should pass PSReservedParams" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidShouldContinueWithoutForce" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCMaskingConfiguration.Should pass PSAvoidShouldContinueWithoutForce" time="0.0079" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidTrailingWhitespace" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCMaskingConfiguration.Should pass PSAvoidTrailingWhitespace" time="0.0148" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingUserNameAndPassWordParams" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCMaskingConfiguration.Should pass PSAvoidUsingUserNameAndPassWordParams" time="0.0142" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingComputerNameHardcoded" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCMaskingConfiguration.Should pass PSAvoidUsingComputerNameHardcoded" time="0.0079" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingConvertToSecureStringWithPlainText" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCMaskingConfiguration.Should pass PSAvoidUsingConvertToSecureStringWithPlainText" time="0.0136" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingDeprecatedManifestFields" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCMaskingConfiguration.Should pass PSAvoidUsingDeprecatedManifestFields" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingInvokeExpression" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCMaskingConfiguration.Should pass PSAvoidUsingInvokeExpression" time="0.0129" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingPlainTextForPassword" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCMaskingConfiguration.Should pass PSAvoidUsingPlainTextForPassword" time="0.0128" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingWMICmdlet" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCMaskingConfiguration.Should pass PSAvoidUsingWMICmdlet" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingWriteHost" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCMaskingConfiguration.Should pass PSAvoidUsingWriteHost" time="0.0128" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSMisleadingBacktick" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCMaskingConfiguration.Should pass PSMisleadingBacktick" time="0.0076" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSMissingModuleManifestField" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCMaskingConfiguration.Should pass PSMissingModuleManifestField" time="0.0131" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPlaceCloseBrace" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCMaskingConfiguration.Should pass PSPlaceCloseBrace" time="0.0076" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPlaceOpenBrace" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCMaskingConfiguration.Should pass PSPlaceOpenBrace" time="0.0131" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectComparisonWithNull" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCMaskingConfiguration.Should pass PSPossibleIncorrectComparisonWithNull" time="0.0125" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectUsageOfAssignmentOperator" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCMaskingConfiguration.Should pass PSPossibleIncorrectUsageOfAssignmentOperator" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectUsageOfRedirectionOperator" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCMaskingConfiguration.Should pass PSPossibleIncorrectUsageOfRedirectionOperator" time="0.0126" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSProvideCommentHelp" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCMaskingConfiguration.Should pass PSProvideCommentHelp" time="0.0076" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseApprovedVerbs" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCMaskingConfiguration.Should pass PSUseApprovedVerbs" time="0.0127" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseBOMForUnicodeEncodedFile" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCMaskingConfiguration.Should pass PSUseBOMForUnicodeEncodedFile" time="0.0075" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseCmdletCorrectly" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCMaskingConfiguration.Should pass PSUseCmdletCorrectly" time="0.0129" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseCompatibleCmdlets" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCMaskingConfiguration.Should pass PSUseCompatibleCmdlets" time="0.0129" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseConsistentIndentation" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCMaskingConfiguration.Should pass PSUseConsistentIndentation" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseConsistentWhitespace" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCMaskingConfiguration.Should pass PSUseConsistentWhitespace" time="0.0129" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseDeclaredVarsMoreThanAssignments" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCMaskingConfiguration.Should pass PSUseDeclaredVarsMoreThanAssignments" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseLiteralInitializerForHashtable" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCMaskingConfiguration.Should pass PSUseLiteralInitializerForHashtable" time="0.013" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseOutputTypeCorrectly" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCMaskingConfiguration.Should pass PSUseOutputTypeCorrectly" time="0.0129" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUsePSCredentialType" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCMaskingConfiguration.Should pass PSUsePSCredentialType" time="0.008" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSShouldProcess" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCMaskingConfiguration.Should pass PSShouldProcess" time="0.0131" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseShouldProcessForStateChangingFunctions" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCMaskingConfiguration.Should pass PSUseShouldProcessForStateChangingFunctions" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseSingularNouns" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCMaskingConfiguration.Should pass PSUseSingularNouns" time="0.0131" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseSupportsShouldProcess" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCMaskingConfiguration.Should pass PSUseSupportsShouldProcess" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseToExportFieldsInManifest" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCMaskingConfiguration.Should pass PSUseToExportFieldsInManifest" time="0.0133" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseUTF8EncodingForHelpFile" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCMaskingConfiguration.Should pass PSUseUTF8EncodingForHelpFile" time="0.0133" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCDscExamplesPresent" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCMaskingConfiguration.Should pass PSDSCDscExamplesPresent" time="0.008" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCDscTestsPresent" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCMaskingConfiguration.Should pass PSDSCDscTestsPresent" time="0.0135" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCReturnCorrectTypesForDSCFunctions" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCMaskingConfiguration.Should pass PSDSCReturnCorrectTypesForDSCFunctions" time="0.0081" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseIdenticalMandatoryParametersForDSC" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCMaskingConfiguration.Should pass PSDSCUseIdenticalMandatoryParametersForDSC" time="0.0132" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseIdenticalParametersForDSC" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCMaskingConfiguration.Should pass PSDSCUseIdenticalParametersForDSC" time="0.008" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCStandardDSCFunctionsInResource" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCMaskingConfiguration.Should pass PSDSCStandardDSCFunctionsInResource" time="0.013" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseVerboseMessageInDSCResource" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCMaskingConfiguration.Should pass PSDSCUseVerboseMessageInDSCResource" time="0.0132" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Analyzing Initialize-PSDCVhdDisk" executed="True" result="Success" success="True" time="0.7782" asserts="0" description="Analyzing Initialize-PSDCVhdDisk">
                <results>
                  <test-case description="Should pass PSAlignAssignmentStatement" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Initialize-PSDCVhdDisk.Should pass PSAlignAssignmentStatement" time="0.194" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingCmdletAliases" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Initialize-PSDCVhdDisk.Should pass PSAvoidUsingCmdletAliases" time="0.0094" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidAssignmentToAutomaticVariable" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Initialize-PSDCVhdDisk.Should pass PSAvoidAssignmentToAutomaticVariable" time="0.0076" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidDefaultValueSwitchParameter" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Initialize-PSDCVhdDisk.Should pass PSAvoidDefaultValueSwitchParameter" time="0.0081" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidDefaultValueForMandatoryParameter" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Initialize-PSDCVhdDisk.Should pass PSAvoidDefaultValueForMandatoryParameter" time="0.0085" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingEmptyCatchBlock" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Initialize-PSDCVhdDisk.Should pass PSAvoidUsingEmptyCatchBlock" time="0.0084" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalAliases" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Initialize-PSDCVhdDisk.Should pass PSAvoidGlobalAliases" time="0.0086" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalFunctions" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Initialize-PSDCVhdDisk.Should pass PSAvoidGlobalFunctions" time="0.0085" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalVars" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Initialize-PSDCVhdDisk.Should pass PSAvoidGlobalVars" time="0.0085" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidInvokingEmptyMembers" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Initialize-PSDCVhdDisk.Should pass PSAvoidInvokingEmptyMembers" time="0.0169" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidNullOrEmptyHelpMessageAttribute" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Initialize-PSDCVhdDisk.Should pass PSAvoidNullOrEmptyHelpMessageAttribute" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingPositionalParameters" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Initialize-PSDCVhdDisk.Should pass PSAvoidUsingPositionalParameters" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSReservedCmdletChar" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Initialize-PSDCVhdDisk.Should pass PSReservedCmdletChar" time="0.0076" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSReservedParams" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Initialize-PSDCVhdDisk.Should pass PSReservedParams" time="0.0203" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidShouldContinueWithoutForce" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Initialize-PSDCVhdDisk.Should pass PSAvoidShouldContinueWithoutForce" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidTrailingWhitespace" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Initialize-PSDCVhdDisk.Should pass PSAvoidTrailingWhitespace" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingUserNameAndPassWordParams" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Initialize-PSDCVhdDisk.Should pass PSAvoidUsingUserNameAndPassWordParams" time="0.0139" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingComputerNameHardcoded" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Initialize-PSDCVhdDisk.Should pass PSAvoidUsingComputerNameHardcoded" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingConvertToSecureStringWithPlainText" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Initialize-PSDCVhdDisk.Should pass PSAvoidUsingConvertToSecureStringWithPlainText" time="0.0134" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingDeprecatedManifestFields" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Initialize-PSDCVhdDisk.Should pass PSAvoidUsingDeprecatedManifestFields" time="0.013" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingInvokeExpression" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Initialize-PSDCVhdDisk.Should pass PSAvoidUsingInvokeExpression" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingPlainTextForPassword" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Initialize-PSDCVhdDisk.Should pass PSAvoidUsingPlainTextForPassword" time="0.0132" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingWMICmdlet" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Initialize-PSDCVhdDisk.Should pass PSAvoidUsingWMICmdlet" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingWriteHost" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Initialize-PSDCVhdDisk.Should pass PSAvoidUsingWriteHost" time="0.0133" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSMisleadingBacktick" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Initialize-PSDCVhdDisk.Should pass PSMisleadingBacktick" time="0.008" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSMissingModuleManifestField" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Initialize-PSDCVhdDisk.Should pass PSMissingModuleManifestField" time="0.0131" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPlaceCloseBrace" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Initialize-PSDCVhdDisk.Should pass PSPlaceCloseBrace" time="0.013" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPlaceOpenBrace" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Initialize-PSDCVhdDisk.Should pass PSPlaceOpenBrace" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectComparisonWithNull" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Initialize-PSDCVhdDisk.Should pass PSPossibleIncorrectComparisonWithNull" time="0.0129" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectUsageOfAssignmentOperator" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Initialize-PSDCVhdDisk.Should pass PSPossibleIncorrectUsageOfAssignmentOperator" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectUsageOfRedirectionOperator" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Initialize-PSDCVhdDisk.Should pass PSPossibleIncorrectUsageOfRedirectionOperator" time="0.0131" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSProvideCommentHelp" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Initialize-PSDCVhdDisk.Should pass PSProvideCommentHelp" time="0.014" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseApprovedVerbs" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Initialize-PSDCVhdDisk.Should pass PSUseApprovedVerbs" time="0.0079" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseBOMForUnicodeEncodedFile" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Initialize-PSDCVhdDisk.Should pass PSUseBOMForUnicodeEncodedFile" time="0.0134" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseCmdletCorrectly" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Initialize-PSDCVhdDisk.Should pass PSUseCmdletCorrectly" time="0.0138" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseCompatibleCmdlets" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Initialize-PSDCVhdDisk.Should pass PSUseCompatibleCmdlets" time="0.0177" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseConsistentIndentation" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Initialize-PSDCVhdDisk.Should pass PSUseConsistentIndentation" time="0.008" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseConsistentWhitespace" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Initialize-PSDCVhdDisk.Should pass PSUseConsistentWhitespace" time="0.008" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseDeclaredVarsMoreThanAssignments" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Initialize-PSDCVhdDisk.Should pass PSUseDeclaredVarsMoreThanAssignments" time="0.0139" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseLiteralInitializerForHashtable" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Initialize-PSDCVhdDisk.Should pass PSUseLiteralInitializerForHashtable" time="0.0138" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseOutputTypeCorrectly" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Initialize-PSDCVhdDisk.Should pass PSUseOutputTypeCorrectly" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUsePSCredentialType" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Initialize-PSDCVhdDisk.Should pass PSUsePSCredentialType" time="0.0075" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSShouldProcess" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Initialize-PSDCVhdDisk.Should pass PSShouldProcess" time="0.0129" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseShouldProcessForStateChangingFunctions" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Initialize-PSDCVhdDisk.Should pass PSUseShouldProcessForStateChangingFunctions" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseSingularNouns" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Initialize-PSDCVhdDisk.Should pass PSUseSingularNouns" time="0.013" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseSupportsShouldProcess" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Initialize-PSDCVhdDisk.Should pass PSUseSupportsShouldProcess" time="0.0076" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseToExportFieldsInManifest" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Initialize-PSDCVhdDisk.Should pass PSUseToExportFieldsInManifest" time="0.0129" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseUTF8EncodingForHelpFile" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Initialize-PSDCVhdDisk.Should pass PSUseUTF8EncodingForHelpFile" time="0.013" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCDscExamplesPresent" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Initialize-PSDCVhdDisk.Should pass PSDSCDscExamplesPresent" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCDscTestsPresent" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Initialize-PSDCVhdDisk.Should pass PSDSCDscTestsPresent" time="0.0131" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCReturnCorrectTypesForDSCFunctions" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Initialize-PSDCVhdDisk.Should pass PSDSCReturnCorrectTypesForDSCFunctions" time="0.0076" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseIdenticalMandatoryParametersForDSC" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Initialize-PSDCVhdDisk.Should pass PSDSCUseIdenticalMandatoryParametersForDSC" time="0.0131" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseIdenticalParametersForDSC" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Initialize-PSDCVhdDisk.Should pass PSDSCUseIdenticalParametersForDSC" time="0.0133" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCStandardDSCFunctionsInResource" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Initialize-PSDCVhdDisk.Should pass PSDSCStandardDSCFunctionsInResource" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseVerboseMessageInDSCResource" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Initialize-PSDCVhdDisk.Should pass PSDSCUseVerboseMessageInDSCResource" time="0.0129" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Analyzing New-PSDCVhdDisk" executed="True" result="Success" success="True" time="0.751" asserts="0" description="Analyzing New-PSDCVhdDisk">
                <results>
                  <test-case description="Should pass PSAlignAssignmentStatement" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCVhdDisk.Should pass PSAlignAssignmentStatement" time="0.2002" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingCmdletAliases" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCVhdDisk.Should pass PSAvoidUsingCmdletAliases" time="0.0094" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidAssignmentToAutomaticVariable" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCVhdDisk.Should pass PSAvoidAssignmentToAutomaticVariable" time="0.0076" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidDefaultValueSwitchParameter" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCVhdDisk.Should pass PSAvoidDefaultValueSwitchParameter" time="0.0075" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidDefaultValueForMandatoryParameter" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCVhdDisk.Should pass PSAvoidDefaultValueForMandatoryParameter" time="0.0075" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingEmptyCatchBlock" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCVhdDisk.Should pass PSAvoidUsingEmptyCatchBlock" time="0.0074" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalAliases" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCVhdDisk.Should pass PSAvoidGlobalAliases" time="0.017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalFunctions" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCVhdDisk.Should pass PSAvoidGlobalFunctions" time="0.0076" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalVars" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCVhdDisk.Should pass PSAvoidGlobalVars" time="0.0076" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidInvokingEmptyMembers" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCVhdDisk.Should pass PSAvoidInvokingEmptyMembers" time="0.0075" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidNullOrEmptyHelpMessageAttribute" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCVhdDisk.Should pass PSAvoidNullOrEmptyHelpMessageAttribute" time="0.0075" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingPositionalParameters" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCVhdDisk.Should pass PSAvoidUsingPositionalParameters" time="0.0074" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSReservedCmdletChar" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCVhdDisk.Should pass PSReservedCmdletChar" time="0.0075" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSReservedParams" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCVhdDisk.Should pass PSReservedParams" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidShouldContinueWithoutForce" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCVhdDisk.Should pass PSAvoidShouldContinueWithoutForce" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidTrailingWhitespace" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCVhdDisk.Should pass PSAvoidTrailingWhitespace" time="0.0083" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingUserNameAndPassWordParams" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCVhdDisk.Should pass PSAvoidUsingUserNameAndPassWordParams" time="0.0085" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingComputerNameHardcoded" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCVhdDisk.Should pass PSAvoidUsingComputerNameHardcoded" time="0.0088" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingConvertToSecureStringWithPlainText" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCVhdDisk.Should pass PSAvoidUsingConvertToSecureStringWithPlainText" time="0.0089" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingDeprecatedManifestFields" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCVhdDisk.Should pass PSAvoidUsingDeprecatedManifestFields" time="0.0201" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingInvokeExpression" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCVhdDisk.Should pass PSAvoidUsingInvokeExpression" time="0.0129" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingPlainTextForPassword" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCVhdDisk.Should pass PSAvoidUsingPlainTextForPassword" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingWMICmdlet" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCVhdDisk.Should pass PSAvoidUsingWMICmdlet" time="0.0128" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingWriteHost" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCVhdDisk.Should pass PSAvoidUsingWriteHost" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSMisleadingBacktick" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCVhdDisk.Should pass PSMisleadingBacktick" time="0.0127" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSMissingModuleManifestField" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCVhdDisk.Should pass PSMissingModuleManifestField" time="0.0127" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPlaceCloseBrace" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCVhdDisk.Should pass PSPlaceCloseBrace" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPlaceOpenBrace" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCVhdDisk.Should pass PSPlaceOpenBrace" time="0.0127" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectComparisonWithNull" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCVhdDisk.Should pass PSPossibleIncorrectComparisonWithNull" time="0.0076" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectUsageOfAssignmentOperator" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCVhdDisk.Should pass PSPossibleIncorrectUsageOfAssignmentOperator" time="0.0131" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectUsageOfRedirectionOperator" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCVhdDisk.Should pass PSPossibleIncorrectUsageOfRedirectionOperator" time="0.0127" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSProvideCommentHelp" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCVhdDisk.Should pass PSProvideCommentHelp" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseApprovedVerbs" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCVhdDisk.Should pass PSUseApprovedVerbs" time="0.0129" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseBOMForUnicodeEncodedFile" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCVhdDisk.Should pass PSUseBOMForUnicodeEncodedFile" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseCmdletCorrectly" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCVhdDisk.Should pass PSUseCmdletCorrectly" time="0.0127" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseCompatibleCmdlets" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCVhdDisk.Should pass PSUseCompatibleCmdlets" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseConsistentIndentation" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCVhdDisk.Should pass PSUseConsistentIndentation" time="0.0131" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseConsistentWhitespace" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCVhdDisk.Should pass PSUseConsistentWhitespace" time="0.0127" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseDeclaredVarsMoreThanAssignments" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCVhdDisk.Should pass PSUseDeclaredVarsMoreThanAssignments" time="0.0076" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseLiteralInitializerForHashtable" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCVhdDisk.Should pass PSUseLiteralInitializerForHashtable" time="0.0128" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseOutputTypeCorrectly" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCVhdDisk.Should pass PSUseOutputTypeCorrectly" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUsePSCredentialType" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCVhdDisk.Should pass PSUsePSCredentialType" time="0.0131" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSShouldProcess" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCVhdDisk.Should pass PSShouldProcess" time="0.0129" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseShouldProcessForStateChangingFunctions" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCVhdDisk.Should pass PSUseShouldProcessForStateChangingFunctions" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseSingularNouns" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCVhdDisk.Should pass PSUseSingularNouns" time="0.0132" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseSupportsShouldProcess" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCVhdDisk.Should pass PSUseSupportsShouldProcess" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseToExportFieldsInManifest" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCVhdDisk.Should pass PSUseToExportFieldsInManifest" time="0.0132" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseUTF8EncodingForHelpFile" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCVhdDisk.Should pass PSUseUTF8EncodingForHelpFile" time="0.0079" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCDscExamplesPresent" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCVhdDisk.Should pass PSDSCDscExamplesPresent" time="0.0132" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCDscTestsPresent" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCVhdDisk.Should pass PSDSCDscTestsPresent" time="0.0132" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCReturnCorrectTypesForDSCFunctions" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCVhdDisk.Should pass PSDSCReturnCorrectTypesForDSCFunctions" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseIdenticalMandatoryParametersForDSC" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCVhdDisk.Should pass PSDSCUseIdenticalMandatoryParametersForDSC" time="0.0128" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseIdenticalParametersForDSC" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCVhdDisk.Should pass PSDSCUseIdenticalParametersForDSC" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCStandardDSCFunctionsInResource" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCVhdDisk.Should pass PSDSCStandardDSCFunctionsInResource" time="0.0126" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseVerboseMessageInDSCResource" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCVhdDisk.Should pass PSDSCUseVerboseMessageInDSCResource" time="0.0132" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Analyzing Get-PSDCImage" executed="True" result="Success" success="True" time="0.787" asserts="0" description="Analyzing Get-PSDCImage">
                <results>
                  <test-case description="Should pass PSAlignAssignmentStatement" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCImage.Should pass PSAlignAssignmentStatement" time="0.2317" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingCmdletAliases" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCImage.Should pass PSAvoidUsingCmdletAliases" time="0.0093" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidAssignmentToAutomaticVariable" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCImage.Should pass PSAvoidAssignmentToAutomaticVariable" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidDefaultValueSwitchParameter" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCImage.Should pass PSAvoidDefaultValueSwitchParameter" time="0.0085" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidDefaultValueForMandatoryParameter" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCImage.Should pass PSAvoidDefaultValueForMandatoryParameter" time="0.0085" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingEmptyCatchBlock" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCImage.Should pass PSAvoidUsingEmptyCatchBlock" time="0.0084" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalAliases" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCImage.Should pass PSAvoidGlobalAliases" time="0.0086" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalFunctions" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCImage.Should pass PSAvoidGlobalFunctions" time="0.0085" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalVars" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCImage.Should pass PSAvoidGlobalVars" time="0.0084" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidInvokingEmptyMembers" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCImage.Should pass PSAvoidInvokingEmptyMembers" time="0.0084" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidNullOrEmptyHelpMessageAttribute" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCImage.Should pass PSAvoidNullOrEmptyHelpMessageAttribute" time="0.0085" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingPositionalParameters" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCImage.Should pass PSAvoidUsingPositionalParameters" time="0.0089" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSReservedCmdletChar" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCImage.Should pass PSReservedCmdletChar" time="0.0087" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSReservedParams" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCImage.Should pass PSReservedParams" time="0.0087" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidShouldContinueWithoutForce" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCImage.Should pass PSAvoidShouldContinueWithoutForce" time="0.0165" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidTrailingWhitespace" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCImage.Should pass PSAvoidTrailingWhitespace" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingUserNameAndPassWordParams" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCImage.Should pass PSAvoidUsingUserNameAndPassWordParams" time="0.0075" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingComputerNameHardcoded" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCImage.Should pass PSAvoidUsingComputerNameHardcoded" time="0.0185" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingConvertToSecureStringWithPlainText" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCImage.Should pass PSAvoidUsingConvertToSecureStringWithPlainText" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingDeprecatedManifestFields" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCImage.Should pass PSAvoidUsingDeprecatedManifestFields" time="0.0129" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingInvokeExpression" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCImage.Should pass PSAvoidUsingInvokeExpression" time="0.0128" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingPlainTextForPassword" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCImage.Should pass PSAvoidUsingPlainTextForPassword" time="0.0083" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingWMICmdlet" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCImage.Should pass PSAvoidUsingWMICmdlet" time="0.0129" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingWriteHost" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCImage.Should pass PSAvoidUsingWriteHost" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSMisleadingBacktick" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCImage.Should pass PSMisleadingBacktick" time="0.0127" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSMissingModuleManifestField" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCImage.Should pass PSMissingModuleManifestField" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPlaceCloseBrace" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCImage.Should pass PSPlaceCloseBrace" time="0.0128" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPlaceOpenBrace" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCImage.Should pass PSPlaceOpenBrace" time="0.0127" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectComparisonWithNull" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCImage.Should pass PSPossibleIncorrectComparisonWithNull" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectUsageOfAssignmentOperator" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCImage.Should pass PSPossibleIncorrectUsageOfAssignmentOperator" time="0.0127" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectUsageOfRedirectionOperator" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCImage.Should pass PSPossibleIncorrectUsageOfRedirectionOperator" time="0.0076" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSProvideCommentHelp" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCImage.Should pass PSProvideCommentHelp" time="0.0129" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseApprovedVerbs" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCImage.Should pass PSUseApprovedVerbs" time="0.0128" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseBOMForUnicodeEncodedFile" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCImage.Should pass PSUseBOMForUnicodeEncodedFile" time="0.0082" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseCmdletCorrectly" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCImage.Should pass PSUseCmdletCorrectly" time="0.0137" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseCompatibleCmdlets" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCImage.Should pass PSUseCompatibleCmdlets" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseConsistentIndentation" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCImage.Should pass PSUseConsistentIndentation" time="0.0127" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseConsistentWhitespace" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCImage.Should pass PSUseConsistentWhitespace" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseDeclaredVarsMoreThanAssignments" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCImage.Should pass PSUseDeclaredVarsMoreThanAssignments" time="0.0128" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseLiteralInitializerForHashtable" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCImage.Should pass PSUseLiteralInitializerForHashtable" time="0.0131" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseOutputTypeCorrectly" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCImage.Should pass PSUseOutputTypeCorrectly" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUsePSCredentialType" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCImage.Should pass PSUsePSCredentialType" time="0.0127" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSShouldProcess" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCImage.Should pass PSShouldProcess" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseShouldProcessForStateChangingFunctions" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCImage.Should pass PSUseShouldProcessForStateChangingFunctions" time="0.0127" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseSingularNouns" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCImage.Should pass PSUseSingularNouns" time="0.013" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseSupportsShouldProcess" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCImage.Should pass PSUseSupportsShouldProcess" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseToExportFieldsInManifest" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCImage.Should pass PSUseToExportFieldsInManifest" time="0.0128" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseUTF8EncodingForHelpFile" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCImage.Should pass PSUseUTF8EncodingForHelpFile" time="0.0076" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCDscExamplesPresent" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCImage.Should pass PSDSCDscExamplesPresent" time="0.0126" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCDscTestsPresent" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCImage.Should pass PSDSCDscTestsPresent" time="0.0075" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCReturnCorrectTypesForDSCFunctions" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCImage.Should pass PSDSCReturnCorrectTypesForDSCFunctions" time="0.0128" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseIdenticalMandatoryParametersForDSC" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCImage.Should pass PSDSCUseIdenticalMandatoryParametersForDSC" time="0.013" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseIdenticalParametersForDSC" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCImage.Should pass PSDSCUseIdenticalParametersForDSC" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCStandardDSCFunctionsInResource" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCImage.Should pass PSDSCStandardDSCFunctionsInResource" time="0.0129" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseVerboseMessageInDSCResource" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Get-PSDCImage.Should pass PSDSCUseVerboseMessageInDSCResource" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Analyzing New-PSDCImage" executed="True" result="Success" success="True" time="0.9865" asserts="0" description="Analyzing New-PSDCImage">
                <results>
                  <test-case description="Should pass PSAlignAssignmentStatement" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCImage.Should pass PSAlignAssignmentStatement" time="0.3855" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingCmdletAliases" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCImage.Should pass PSAvoidUsingCmdletAliases" time="0.0234" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidAssignmentToAutomaticVariable" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCImage.Should pass PSAvoidAssignmentToAutomaticVariable" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidDefaultValueSwitchParameter" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCImage.Should pass PSAvoidDefaultValueSwitchParameter" time="0.0139" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidDefaultValueForMandatoryParameter" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCImage.Should pass PSAvoidDefaultValueForMandatoryParameter" time="0.013" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingEmptyCatchBlock" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCImage.Should pass PSAvoidUsingEmptyCatchBlock" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalAliases" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCImage.Should pass PSAvoidGlobalAliases" time="0.0129" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalFunctions" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCImage.Should pass PSAvoidGlobalFunctions" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalVars" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCImage.Should pass PSAvoidGlobalVars" time="0.0133" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidInvokingEmptyMembers" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCImage.Should pass PSAvoidInvokingEmptyMembers" time="0.0076" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidNullOrEmptyHelpMessageAttribute" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCImage.Should pass PSAvoidNullOrEmptyHelpMessageAttribute" time="0.0136" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingPositionalParameters" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCImage.Should pass PSAvoidUsingPositionalParameters" time="0.0133" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSReservedCmdletChar" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCImage.Should pass PSReservedCmdletChar" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSReservedParams" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCImage.Should pass PSReservedParams" time="0.013" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidShouldContinueWithoutForce" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCImage.Should pass PSAvoidShouldContinueWithoutForce" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidTrailingWhitespace" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCImage.Should pass PSAvoidTrailingWhitespace" time="0.0131" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingUserNameAndPassWordParams" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCImage.Should pass PSAvoidUsingUserNameAndPassWordParams" time="0.0131" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingComputerNameHardcoded" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCImage.Should pass PSAvoidUsingComputerNameHardcoded" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingConvertToSecureStringWithPlainText" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCImage.Should pass PSAvoidUsingConvertToSecureStringWithPlainText" time="0.0133" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingDeprecatedManifestFields" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCImage.Should pass PSAvoidUsingDeprecatedManifestFields" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingInvokeExpression" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCImage.Should pass PSAvoidUsingInvokeExpression" time="0.0132" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingPlainTextForPassword" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCImage.Should pass PSAvoidUsingPlainTextForPassword" time="0.0131" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingWMICmdlet" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCImage.Should pass PSAvoidUsingWMICmdlet" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingWriteHost" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCImage.Should pass PSAvoidUsingWriteHost" time="0.0131" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSMisleadingBacktick" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCImage.Should pass PSMisleadingBacktick" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSMissingModuleManifestField" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCImage.Should pass PSMissingModuleManifestField" time="0.0129" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPlaceCloseBrace" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCImage.Should pass PSPlaceCloseBrace" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPlaceOpenBrace" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCImage.Should pass PSPlaceOpenBrace" time="0.0131" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectComparisonWithNull" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCImage.Should pass PSPossibleIncorrectComparisonWithNull" time="0.0129" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectUsageOfAssignmentOperator" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCImage.Should pass PSPossibleIncorrectUsageOfAssignmentOperator" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectUsageOfRedirectionOperator" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCImage.Should pass PSPossibleIncorrectUsageOfRedirectionOperator" time="0.0132" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSProvideCommentHelp" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCImage.Should pass PSProvideCommentHelp" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseApprovedVerbs" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCImage.Should pass PSUseApprovedVerbs" time="0.0134" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseBOMForUnicodeEncodedFile" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCImage.Should pass PSUseBOMForUnicodeEncodedFile" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseCmdletCorrectly" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCImage.Should pass PSUseCmdletCorrectly" time="0.013" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseCompatibleCmdlets" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCImage.Should pass PSUseCompatibleCmdlets" time="0.0133" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseConsistentIndentation" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCImage.Should pass PSUseConsistentIndentation" time="0.008" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseConsistentWhitespace" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCImage.Should pass PSUseConsistentWhitespace" time="0.0132" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseDeclaredVarsMoreThanAssignments" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCImage.Should pass PSUseDeclaredVarsMoreThanAssignments" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseLiteralInitializerForHashtable" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCImage.Should pass PSUseLiteralInitializerForHashtable" time="0.0132" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseOutputTypeCorrectly" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCImage.Should pass PSUseOutputTypeCorrectly" time="0.013" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUsePSCredentialType" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCImage.Should pass PSUsePSCredentialType" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSShouldProcess" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCImage.Should pass PSShouldProcess" time="0.013" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseShouldProcessForStateChangingFunctions" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCImage.Should pass PSUseShouldProcessForStateChangingFunctions" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseSingularNouns" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCImage.Should pass PSUseSingularNouns" time="0.013" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseSupportsShouldProcess" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCImage.Should pass PSUseSupportsShouldProcess" time="0.0076" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseToExportFieldsInManifest" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCImage.Should pass PSUseToExportFieldsInManifest" time="0.0131" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseUTF8EncodingForHelpFile" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCImage.Should pass PSUseUTF8EncodingForHelpFile" time="0.013" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCDscExamplesPresent" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCImage.Should pass PSDSCDscExamplesPresent" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCDscTestsPresent" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCImage.Should pass PSDSCDscTestsPresent" time="0.013" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCReturnCorrectTypesForDSCFunctions" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCImage.Should pass PSDSCReturnCorrectTypesForDSCFunctions" time="0.0076" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseIdenticalMandatoryParametersForDSC" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCImage.Should pass PSDSCUseIdenticalMandatoryParametersForDSC" time="0.0131" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseIdenticalParametersForDSC" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCImage.Should pass PSDSCUseIdenticalParametersForDSC" time="0.0132" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCStandardDSCFunctionsInResource" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCImage.Should pass PSDSCStandardDSCFunctionsInResource" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseVerboseMessageInDSCResource" name="Invoking PSScriptAnalyzer against commandbase.Analyzing New-PSDCImage.Should pass PSDSCUseVerboseMessageInDSCResource" time="0.0132" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Analyzing Remove-PSDCImage" executed="True" result="Success" success="True" time="0.9025" asserts="0" description="Analyzing Remove-PSDCImage">
                <results>
                  <test-case description="Should pass PSAlignAssignmentStatement" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCImage.Should pass PSAlignAssignmentStatement" time="0.287" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingCmdletAliases" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCImage.Should pass PSAvoidUsingCmdletAliases" time="0.0112" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidAssignmentToAutomaticVariable" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCImage.Should pass PSAvoidAssignmentToAutomaticVariable" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidDefaultValueSwitchParameter" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCImage.Should pass PSAvoidDefaultValueSwitchParameter" time="0.028" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidDefaultValueForMandatoryParameter" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCImage.Should pass PSAvoidDefaultValueForMandatoryParameter" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingEmptyCatchBlock" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCImage.Should pass PSAvoidUsingEmptyCatchBlock" time="0.0134" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalAliases" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCImage.Should pass PSAvoidGlobalAliases" time="0.0088" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalFunctions" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCImage.Should pass PSAvoidGlobalFunctions" time="0.0133" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalVars" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCImage.Should pass PSAvoidGlobalVars" time="0.013" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidInvokingEmptyMembers" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCImage.Should pass PSAvoidInvokingEmptyMembers" time="0.0079" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidNullOrEmptyHelpMessageAttribute" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCImage.Should pass PSAvoidNullOrEmptyHelpMessageAttribute" time="0.014" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingPositionalParameters" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCImage.Should pass PSAvoidUsingPositionalParameters" time="0.0079" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSReservedCmdletChar" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCImage.Should pass PSReservedCmdletChar" time="0.0139" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSReservedParams" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCImage.Should pass PSReservedParams" time="0.0138" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidShouldContinueWithoutForce" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCImage.Should pass PSAvoidShouldContinueWithoutForce" time="0.0138" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidTrailingWhitespace" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCImage.Should pass PSAvoidTrailingWhitespace" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingUserNameAndPassWordParams" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCImage.Should pass PSAvoidUsingUserNameAndPassWordParams" time="0.0075" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingComputerNameHardcoded" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCImage.Should pass PSAvoidUsingComputerNameHardcoded" time="0.0131" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingConvertToSecureStringWithPlainText" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCImage.Should pass PSAvoidUsingConvertToSecureStringWithPlainText" time="0.0131" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingDeprecatedManifestFields" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCImage.Should pass PSAvoidUsingDeprecatedManifestFields" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingInvokeExpression" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCImage.Should pass PSAvoidUsingInvokeExpression" time="0.0131" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingPlainTextForPassword" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCImage.Should pass PSAvoidUsingPlainTextForPassword" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingWMICmdlet" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCImage.Should pass PSAvoidUsingWMICmdlet" time="0.0134" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingWriteHost" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCImage.Should pass PSAvoidUsingWriteHost" time="0.0131" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSMisleadingBacktick" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCImage.Should pass PSMisleadingBacktick" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSMissingModuleManifestField" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCImage.Should pass PSMissingModuleManifestField" time="0.013" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPlaceCloseBrace" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCImage.Should pass PSPlaceCloseBrace" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPlaceOpenBrace" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCImage.Should pass PSPlaceOpenBrace" time="0.0134" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectComparisonWithNull" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCImage.Should pass PSPossibleIncorrectComparisonWithNull" time="0.0076" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectUsageOfAssignmentOperator" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCImage.Should pass PSPossibleIncorrectUsageOfAssignmentOperator" time="0.0131" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectUsageOfRedirectionOperator" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCImage.Should pass PSPossibleIncorrectUsageOfRedirectionOperator" time="0.0135" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSProvideCommentHelp" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCImage.Should pass PSProvideCommentHelp" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseApprovedVerbs" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCImage.Should pass PSUseApprovedVerbs" time="0.0131" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseBOMForUnicodeEncodedFile" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCImage.Should pass PSUseBOMForUnicodeEncodedFile" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseCmdletCorrectly" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCImage.Should pass PSUseCmdletCorrectly" time="0.0129" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseCompatibleCmdlets" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCImage.Should pass PSUseCompatibleCmdlets" time="0.0131" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseConsistentIndentation" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCImage.Should pass PSUseConsistentIndentation" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseConsistentWhitespace" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCImage.Should pass PSUseConsistentWhitespace" time="0.0131" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseDeclaredVarsMoreThanAssignments" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCImage.Should pass PSUseDeclaredVarsMoreThanAssignments" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseLiteralInitializerForHashtable" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCImage.Should pass PSUseLiteralInitializerForHashtable" time="0.013" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseOutputTypeCorrectly" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCImage.Should pass PSUseOutputTypeCorrectly" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUsePSCredentialType" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCImage.Should pass PSUsePSCredentialType" time="0.0132" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSShouldProcess" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCImage.Should pass PSShouldProcess" time="0.0131" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseShouldProcessForStateChangingFunctions" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCImage.Should pass PSUseShouldProcessForStateChangingFunctions" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseSingularNouns" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCImage.Should pass PSUseSingularNouns" time="0.0148" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseSupportsShouldProcess" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCImage.Should pass PSUseSupportsShouldProcess" time="0.0079" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseToExportFieldsInManifest" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCImage.Should pass PSUseToExportFieldsInManifest" time="0.0137" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseUTF8EncodingForHelpFile" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCImage.Should pass PSUseUTF8EncodingForHelpFile" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCDscExamplesPresent" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCImage.Should pass PSDSCDscExamplesPresent" time="0.0144" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCDscTestsPresent" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCImage.Should pass PSDSCDscTestsPresent" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCReturnCorrectTypesForDSCFunctions" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCImage.Should pass PSDSCReturnCorrectTypesForDSCFunctions" time="0.0134" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseIdenticalMandatoryParametersForDSC" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCImage.Should pass PSDSCUseIdenticalMandatoryParametersForDSC" time="0.0133" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseIdenticalParametersForDSC" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCImage.Should pass PSDSCUseIdenticalParametersForDSC" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCStandardDSCFunctionsInResource" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCImage.Should pass PSDSCStandardDSCFunctionsInResource" time="0.0131" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseVerboseMessageInDSCResource" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Remove-PSDCImage.Should pass PSDSCUseVerboseMessageInDSCResource" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Analyzing Convert-PSDCLocalUncPathToLocalPath" executed="True" result="Success" success="True" time="0.7331" asserts="0" description="Analyzing Convert-PSDCLocalUncPathToLocalPath">
                <results>
                  <test-case description="Should pass PSAlignAssignmentStatement" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Convert-PSDCLocalUncPathToLocalPath.Should pass PSAlignAssignmentStatement" time="0.1356" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingCmdletAliases" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Convert-PSDCLocalUncPathToLocalPath.Should pass PSAvoidUsingCmdletAliases" time="0.0076" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidAssignmentToAutomaticVariable" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Convert-PSDCLocalUncPathToLocalPath.Should pass PSAvoidAssignmentToAutomaticVariable" time="0.0133" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidDefaultValueSwitchParameter" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Convert-PSDCLocalUncPathToLocalPath.Should pass PSAvoidDefaultValueSwitchParameter" time="0.0135" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidDefaultValueForMandatoryParameter" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Convert-PSDCLocalUncPathToLocalPath.Should pass PSAvoidDefaultValueForMandatoryParameter" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingEmptyCatchBlock" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Convert-PSDCLocalUncPathToLocalPath.Should pass PSAvoidUsingEmptyCatchBlock" time="0.0131" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalAliases" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Convert-PSDCLocalUncPathToLocalPath.Should pass PSAvoidGlobalAliases" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalFunctions" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Convert-PSDCLocalUncPathToLocalPath.Should pass PSAvoidGlobalFunctions" time="0.0133" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalVars" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Convert-PSDCLocalUncPathToLocalPath.Should pass PSAvoidGlobalVars" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidInvokingEmptyMembers" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Convert-PSDCLocalUncPathToLocalPath.Should pass PSAvoidInvokingEmptyMembers" time="0.0133" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidNullOrEmptyHelpMessageAttribute" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Convert-PSDCLocalUncPathToLocalPath.Should pass PSAvoidNullOrEmptyHelpMessageAttribute" time="0.0133" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingPositionalParameters" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Convert-PSDCLocalUncPathToLocalPath.Should pass PSAvoidUsingPositionalParameters" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSReservedCmdletChar" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Convert-PSDCLocalUncPathToLocalPath.Should pass PSReservedCmdletChar" time="0.0134" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSReservedParams" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Convert-PSDCLocalUncPathToLocalPath.Should pass PSReservedParams" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidShouldContinueWithoutForce" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Convert-PSDCLocalUncPathToLocalPath.Should pass PSAvoidShouldContinueWithoutForce" time="0.0133" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidTrailingWhitespace" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Convert-PSDCLocalUncPathToLocalPath.Should pass PSAvoidTrailingWhitespace" time="0.0132" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingUserNameAndPassWordParams" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Convert-PSDCLocalUncPathToLocalPath.Should pass PSAvoidUsingUserNameAndPassWordParams" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingComputerNameHardcoded" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Convert-PSDCLocalUncPathToLocalPath.Should pass PSAvoidUsingComputerNameHardcoded" time="0.0133" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingConvertToSecureStringWithPlainText" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Convert-PSDCLocalUncPathToLocalPath.Should pass PSAvoidUsingConvertToSecureStringWithPlainText" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingDeprecatedManifestFields" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Convert-PSDCLocalUncPathToLocalPath.Should pass PSAvoidUsingDeprecatedManifestFields" time="0.0137" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingInvokeExpression" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Convert-PSDCLocalUncPathToLocalPath.Should pass PSAvoidUsingInvokeExpression" time="0.0082" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingPlainTextForPassword" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Convert-PSDCLocalUncPathToLocalPath.Should pass PSAvoidUsingPlainTextForPassword" time="0.0143" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingWMICmdlet" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Convert-PSDCLocalUncPathToLocalPath.Should pass PSAvoidUsingWMICmdlet" time="0.0141" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingWriteHost" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Convert-PSDCLocalUncPathToLocalPath.Should pass PSAvoidUsingWriteHost" time="0.0081" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSMisleadingBacktick" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Convert-PSDCLocalUncPathToLocalPath.Should pass PSMisleadingBacktick" time="0.0136" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSMissingModuleManifestField" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Convert-PSDCLocalUncPathToLocalPath.Should pass PSMissingModuleManifestField" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPlaceCloseBrace" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Convert-PSDCLocalUncPathToLocalPath.Should pass PSPlaceCloseBrace" time="0.013" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPlaceOpenBrace" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Convert-PSDCLocalUncPathToLocalPath.Should pass PSPlaceOpenBrace" time="0.0132" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectComparisonWithNull" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Convert-PSDCLocalUncPathToLocalPath.Should pass PSPossibleIncorrectComparisonWithNull" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectUsageOfAssignmentOperator" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Convert-PSDCLocalUncPathToLocalPath.Should pass PSPossibleIncorrectUsageOfAssignmentOperator" time="0.0141" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectUsageOfRedirectionOperator" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Convert-PSDCLocalUncPathToLocalPath.Should pass PSPossibleIncorrectUsageOfRedirectionOperator" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSProvideCommentHelp" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Convert-PSDCLocalUncPathToLocalPath.Should pass PSProvideCommentHelp" time="0.0142" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseApprovedVerbs" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Convert-PSDCLocalUncPathToLocalPath.Should pass PSUseApprovedVerbs" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseBOMForUnicodeEncodedFile" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Convert-PSDCLocalUncPathToLocalPath.Should pass PSUseBOMForUnicodeEncodedFile" time="0.0133" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseCmdletCorrectly" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Convert-PSDCLocalUncPathToLocalPath.Should pass PSUseCmdletCorrectly" time="0.0134" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseCompatibleCmdlets" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Convert-PSDCLocalUncPathToLocalPath.Should pass PSUseCompatibleCmdlets" time="0.0079" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseConsistentIndentation" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Convert-PSDCLocalUncPathToLocalPath.Should pass PSUseConsistentIndentation" time="0.0136" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseConsistentWhitespace" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Convert-PSDCLocalUncPathToLocalPath.Should pass PSUseConsistentWhitespace" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseDeclaredVarsMoreThanAssignments" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Convert-PSDCLocalUncPathToLocalPath.Should pass PSUseDeclaredVarsMoreThanAssignments" time="0.0133" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseLiteralInitializerForHashtable" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Convert-PSDCLocalUncPathToLocalPath.Should pass PSUseLiteralInitializerForHashtable" time="0.0134" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseOutputTypeCorrectly" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Convert-PSDCLocalUncPathToLocalPath.Should pass PSUseOutputTypeCorrectly" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUsePSCredentialType" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Convert-PSDCLocalUncPathToLocalPath.Should pass PSUsePSCredentialType" time="0.014" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSShouldProcess" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Convert-PSDCLocalUncPathToLocalPath.Should pass PSShouldProcess" time="0.0137" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseShouldProcessForStateChangingFunctions" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Convert-PSDCLocalUncPathToLocalPath.Should pass PSUseShouldProcessForStateChangingFunctions" time="0.0144" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseSingularNouns" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Convert-PSDCLocalUncPathToLocalPath.Should pass PSUseSingularNouns" time="0.0079" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseSupportsShouldProcess" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Convert-PSDCLocalUncPathToLocalPath.Should pass PSUseSupportsShouldProcess" time="0.0075" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseToExportFieldsInManifest" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Convert-PSDCLocalUncPathToLocalPath.Should pass PSUseToExportFieldsInManifest" time="0.0075" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseUTF8EncodingForHelpFile" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Convert-PSDCLocalUncPathToLocalPath.Should pass PSUseUTF8EncodingForHelpFile" time="0.0129" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCDscExamplesPresent" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Convert-PSDCLocalUncPathToLocalPath.Should pass PSDSCDscExamplesPresent" time="0.0131" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCDscTestsPresent" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Convert-PSDCLocalUncPathToLocalPath.Should pass PSDSCDscTestsPresent" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCReturnCorrectTypesForDSCFunctions" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Convert-PSDCLocalUncPathToLocalPath.Should pass PSDSCReturnCorrectTypesForDSCFunctions" time="0.0131" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseIdenticalMandatoryParametersForDSC" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Convert-PSDCLocalUncPathToLocalPath.Should pass PSDSCUseIdenticalMandatoryParametersForDSC" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseIdenticalParametersForDSC" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Convert-PSDCLocalUncPathToLocalPath.Should pass PSDSCUseIdenticalParametersForDSC" time="0.0134" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCStandardDSCFunctionsInResource" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Convert-PSDCLocalUncPathToLocalPath.Should pass PSDSCStandardDSCFunctionsInResource" time="0.0133" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseVerboseMessageInDSCResource" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Convert-PSDCLocalUncPathToLocalPath.Should pass PSDSCUseVerboseMessageInDSCResource" time="0.0079" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Analyzing Set-PSDCConfiguration" executed="True" result="Success" success="True" time="0.7125" asserts="0" description="Analyzing Set-PSDCConfiguration">
                <results>
                  <test-case description="Should pass PSAlignAssignmentStatement" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Set-PSDCConfiguration.Should pass PSAlignAssignmentStatement" time="0.1086" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingCmdletAliases" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Set-PSDCConfiguration.Should pass PSAvoidUsingCmdletAliases" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidAssignmentToAutomaticVariable" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Set-PSDCConfiguration.Should pass PSAvoidAssignmentToAutomaticVariable" time="0.0076" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidDefaultValueSwitchParameter" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Set-PSDCConfiguration.Should pass PSAvoidDefaultValueSwitchParameter" time="0.0079" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidDefaultValueForMandatoryParameter" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Set-PSDCConfiguration.Should pass PSAvoidDefaultValueForMandatoryParameter" time="0.0089" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingEmptyCatchBlock" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Set-PSDCConfiguration.Should pass PSAvoidUsingEmptyCatchBlock" time="0.0089" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalAliases" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Set-PSDCConfiguration.Should pass PSAvoidGlobalAliases" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalFunctions" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Set-PSDCConfiguration.Should pass PSAvoidGlobalFunctions" time="0.008" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalVars" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Set-PSDCConfiguration.Should pass PSAvoidGlobalVars" time="0.0238" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidInvokingEmptyMembers" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Set-PSDCConfiguration.Should pass PSAvoidInvokingEmptyMembers" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidNullOrEmptyHelpMessageAttribute" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Set-PSDCConfiguration.Should pass PSAvoidNullOrEmptyHelpMessageAttribute" time="0.0131" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingPositionalParameters" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Set-PSDCConfiguration.Should pass PSAvoidUsingPositionalParameters" time="0.0132" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSReservedCmdletChar" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Set-PSDCConfiguration.Should pass PSReservedCmdletChar" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSReservedParams" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Set-PSDCConfiguration.Should pass PSReservedParams" time="0.0145" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidShouldContinueWithoutForce" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Set-PSDCConfiguration.Should pass PSAvoidShouldContinueWithoutForce" time="0.0129" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidTrailingWhitespace" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Set-PSDCConfiguration.Should pass PSAvoidTrailingWhitespace" time="0.0157" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingUserNameAndPassWordParams" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Set-PSDCConfiguration.Should pass PSAvoidUsingUserNameAndPassWordParams" time="0.0134" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingComputerNameHardcoded" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Set-PSDCConfiguration.Should pass PSAvoidUsingComputerNameHardcoded" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingConvertToSecureStringWithPlainText" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Set-PSDCConfiguration.Should pass PSAvoidUsingConvertToSecureStringWithPlainText" time="0.013" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingDeprecatedManifestFields" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Set-PSDCConfiguration.Should pass PSAvoidUsingDeprecatedManifestFields" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingInvokeExpression" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Set-PSDCConfiguration.Should pass PSAvoidUsingInvokeExpression" time="0.0131" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingPlainTextForPassword" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Set-PSDCConfiguration.Should pass PSAvoidUsingPlainTextForPassword" time="0.0131" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingWMICmdlet" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Set-PSDCConfiguration.Should pass PSAvoidUsingWMICmdlet" time="0.0079" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingWriteHost" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Set-PSDCConfiguration.Should pass PSAvoidUsingWriteHost" time="0.0131" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSMisleadingBacktick" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Set-PSDCConfiguration.Should pass PSMisleadingBacktick" time="0.0079" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSMissingModuleManifestField" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Set-PSDCConfiguration.Should pass PSMissingModuleManifestField" time="0.0131" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPlaceCloseBrace" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Set-PSDCConfiguration.Should pass PSPlaceCloseBrace" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPlaceOpenBrace" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Set-PSDCConfiguration.Should pass PSPlaceOpenBrace" time="0.013" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectComparisonWithNull" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Set-PSDCConfiguration.Should pass PSPossibleIncorrectComparisonWithNull" time="0.0128" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectUsageOfAssignmentOperator" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Set-PSDCConfiguration.Should pass PSPossibleIncorrectUsageOfAssignmentOperator" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectUsageOfRedirectionOperator" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Set-PSDCConfiguration.Should pass PSPossibleIncorrectUsageOfRedirectionOperator" time="0.0131" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSProvideCommentHelp" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Set-PSDCConfiguration.Should pass PSProvideCommentHelp" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseApprovedVerbs" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Set-PSDCConfiguration.Should pass PSUseApprovedVerbs" time="0.0138" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseBOMForUnicodeEncodedFile" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Set-PSDCConfiguration.Should pass PSUseBOMForUnicodeEncodedFile" time="0.013" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseCmdletCorrectly" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Set-PSDCConfiguration.Should pass PSUseCmdletCorrectly" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseCompatibleCmdlets" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Set-PSDCConfiguration.Should pass PSUseCompatibleCmdlets" time="0.0133" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseConsistentIndentation" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Set-PSDCConfiguration.Should pass PSUseConsistentIndentation" time="0.0079" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseConsistentWhitespace" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Set-PSDCConfiguration.Should pass PSUseConsistentWhitespace" time="0.0133" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseDeclaredVarsMoreThanAssignments" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Set-PSDCConfiguration.Should pass PSUseDeclaredVarsMoreThanAssignments" time="0.0128" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseLiteralInitializerForHashtable" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Set-PSDCConfiguration.Should pass PSUseLiteralInitializerForHashtable" time="0.0079" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseOutputTypeCorrectly" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Set-PSDCConfiguration.Should pass PSUseOutputTypeCorrectly" time="0.013" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUsePSCredentialType" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Set-PSDCConfiguration.Should pass PSUsePSCredentialType" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSShouldProcess" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Set-PSDCConfiguration.Should pass PSShouldProcess" time="0.0132" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseShouldProcessForStateChangingFunctions" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Set-PSDCConfiguration.Should pass PSUseShouldProcessForStateChangingFunctions" time="0.0076" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseSingularNouns" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Set-PSDCConfiguration.Should pass PSUseSingularNouns" time="0.0129" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseSupportsShouldProcess" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Set-PSDCConfiguration.Should pass PSUseSupportsShouldProcess" time="0.0128" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseToExportFieldsInManifest" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Set-PSDCConfiguration.Should pass PSUseToExportFieldsInManifest" time="0.0081" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseUTF8EncodingForHelpFile" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Set-PSDCConfiguration.Should pass PSUseUTF8EncodingForHelpFile" time="0.0153" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCDscExamplesPresent" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Set-PSDCConfiguration.Should pass PSDSCDscExamplesPresent" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCDscTestsPresent" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Set-PSDCConfiguration.Should pass PSDSCDscTestsPresent" time="0.0141" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCReturnCorrectTypesForDSCFunctions" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Set-PSDCConfiguration.Should pass PSDSCReturnCorrectTypesForDSCFunctions" time="0.0134" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseIdenticalMandatoryParametersForDSC" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Set-PSDCConfiguration.Should pass PSDSCUseIdenticalMandatoryParametersForDSC" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseIdenticalParametersForDSC" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Set-PSDCConfiguration.Should pass PSDSCUseIdenticalParametersForDSC" time="0.0131" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCStandardDSCFunctionsInResource" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Set-PSDCConfiguration.Should pass PSDSCStandardDSCFunctionsInResource" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseVerboseMessageInDSCResource" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Set-PSDCConfiguration.Should pass PSDSCUseVerboseMessageInDSCResource" time="0.0132" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Analyzing Test-PSDCRemoting" executed="True" result="Success" success="True" time="0.6943" asserts="0" description="Analyzing Test-PSDCRemoting">
                <results>
                  <test-case description="Should pass PSAlignAssignmentStatement" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCRemoting.Should pass PSAlignAssignmentStatement" time="0.1065" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingCmdletAliases" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCRemoting.Should pass PSAvoidUsingCmdletAliases" time="0.008" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidAssignmentToAutomaticVariable" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCRemoting.Should pass PSAvoidAssignmentToAutomaticVariable" time="0.008" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidDefaultValueSwitchParameter" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCRemoting.Should pass PSAvoidDefaultValueSwitchParameter" time="0.0084" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidDefaultValueForMandatoryParameter" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCRemoting.Should pass PSAvoidDefaultValueForMandatoryParameter" time="0.0147" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingEmptyCatchBlock" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCRemoting.Should pass PSAvoidUsingEmptyCatchBlock" time="0.0079" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalAliases" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCRemoting.Should pass PSAvoidGlobalAliases" time="0.0132" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalFunctions" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCRemoting.Should pass PSAvoidGlobalFunctions" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalVars" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCRemoting.Should pass PSAvoidGlobalVars" time="0.0139" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidInvokingEmptyMembers" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCRemoting.Should pass PSAvoidInvokingEmptyMembers" time="0.0135" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidNullOrEmptyHelpMessageAttribute" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCRemoting.Should pass PSAvoidNullOrEmptyHelpMessageAttribute" time="0.0135" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingPositionalParameters" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCRemoting.Should pass PSAvoidUsingPositionalParameters" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSReservedCmdletChar" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCRemoting.Should pass PSReservedCmdletChar" time="0.0138" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSReservedParams" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCRemoting.Should pass PSReservedParams" time="0.0075" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidShouldContinueWithoutForce" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCRemoting.Should pass PSAvoidShouldContinueWithoutForce" time="0.0138" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidTrailingWhitespace" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCRemoting.Should pass PSAvoidTrailingWhitespace" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingUserNameAndPassWordParams" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCRemoting.Should pass PSAvoidUsingUserNameAndPassWordParams" time="0.0132" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingComputerNameHardcoded" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCRemoting.Should pass PSAvoidUsingComputerNameHardcoded" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingConvertToSecureStringWithPlainText" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCRemoting.Should pass PSAvoidUsingConvertToSecureStringWithPlainText" time="0.0132" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingDeprecatedManifestFields" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCRemoting.Should pass PSAvoidUsingDeprecatedManifestFields" time="0.0129" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingInvokeExpression" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCRemoting.Should pass PSAvoidUsingInvokeExpression" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingPlainTextForPassword" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCRemoting.Should pass PSAvoidUsingPlainTextForPassword" time="0.0131" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingWMICmdlet" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCRemoting.Should pass PSAvoidUsingWMICmdlet" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingWriteHost" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCRemoting.Should pass PSAvoidUsingWriteHost" time="0.0134" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSMisleadingBacktick" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCRemoting.Should pass PSMisleadingBacktick" time="0.0129" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSMissingModuleManifestField" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCRemoting.Should pass PSMissingModuleManifestField" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPlaceCloseBrace" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCRemoting.Should pass PSPlaceCloseBrace" time="0.0132" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPlaceOpenBrace" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCRemoting.Should pass PSPlaceOpenBrace" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectComparisonWithNull" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCRemoting.Should pass PSPossibleIncorrectComparisonWithNull" time="0.0131" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectUsageOfAssignmentOperator" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCRemoting.Should pass PSPossibleIncorrectUsageOfAssignmentOperator" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectUsageOfRedirectionOperator" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCRemoting.Should pass PSPossibleIncorrectUsageOfRedirectionOperator" time="0.0131" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSProvideCommentHelp" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCRemoting.Should pass PSProvideCommentHelp" time="0.0136" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseApprovedVerbs" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCRemoting.Should pass PSUseApprovedVerbs" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseBOMForUnicodeEncodedFile" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCRemoting.Should pass PSUseBOMForUnicodeEncodedFile" time="0.0129" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseCmdletCorrectly" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCRemoting.Should pass PSUseCmdletCorrectly" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseCompatibleCmdlets" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCRemoting.Should pass PSUseCompatibleCmdlets" time="0.0138" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseConsistentIndentation" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCRemoting.Should pass PSUseConsistentIndentation" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseConsistentWhitespace" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCRemoting.Should pass PSUseConsistentWhitespace" time="0.013" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseDeclaredVarsMoreThanAssignments" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCRemoting.Should pass PSUseDeclaredVarsMoreThanAssignments" time="0.013" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseLiteralInitializerForHashtable" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCRemoting.Should pass PSUseLiteralInitializerForHashtable" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseOutputTypeCorrectly" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCRemoting.Should pass PSUseOutputTypeCorrectly" time="0.0132" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUsePSCredentialType" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCRemoting.Should pass PSUsePSCredentialType" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSShouldProcess" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCRemoting.Should pass PSShouldProcess" time="0.0132" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseShouldProcessForStateChangingFunctions" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCRemoting.Should pass PSUseShouldProcessForStateChangingFunctions" time="0.0133" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseSingularNouns" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCRemoting.Should pass PSUseSingularNouns" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseSupportsShouldProcess" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCRemoting.Should pass PSUseSupportsShouldProcess" time="0.0132" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseToExportFieldsInManifest" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCRemoting.Should pass PSUseToExportFieldsInManifest" time="0.0079" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseUTF8EncodingForHelpFile" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCRemoting.Should pass PSUseUTF8EncodingForHelpFile" time="0.0132" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCDscExamplesPresent" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCRemoting.Should pass PSDSCDscExamplesPresent" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCDscTestsPresent" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCRemoting.Should pass PSDSCDscTestsPresent" time="0.0133" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCReturnCorrectTypesForDSCFunctions" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCRemoting.Should pass PSDSCReturnCorrectTypesForDSCFunctions" time="0.0132" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseIdenticalMandatoryParametersForDSC" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCRemoting.Should pass PSDSCUseIdenticalMandatoryParametersForDSC" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseIdenticalParametersForDSC" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCRemoting.Should pass PSDSCUseIdenticalParametersForDSC" time="0.0133" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCStandardDSCFunctionsInResource" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCRemoting.Should pass PSDSCStandardDSCFunctionsInResource" time="0.0081" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseVerboseMessageInDSCResource" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCRemoting.Should pass PSDSCUseVerboseMessageInDSCResource" time="0.0133" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Analyzing Test-PSDCConfiguration" executed="True" result="Success" success="True" time="0.7236" asserts="0" description="Analyzing Test-PSDCConfiguration">
                <results>
                  <test-case description="Should pass PSAlignAssignmentStatement" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCConfiguration.Should pass PSAlignAssignmentStatement" time="0.1021" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingCmdletAliases" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCConfiguration.Should pass PSAvoidUsingCmdletAliases" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidAssignmentToAutomaticVariable" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCConfiguration.Should pass PSAvoidAssignmentToAutomaticVariable" time="0.0079" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidDefaultValueSwitchParameter" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCConfiguration.Should pass PSAvoidDefaultValueSwitchParameter" time="0.0136" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidDefaultValueForMandatoryParameter" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCConfiguration.Should pass PSAvoidDefaultValueForMandatoryParameter" time="0.008" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingEmptyCatchBlock" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCConfiguration.Should pass PSAvoidUsingEmptyCatchBlock" time="0.0134" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalAliases" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCConfiguration.Should pass PSAvoidGlobalAliases" time="0.0131" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalFunctions" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCConfiguration.Should pass PSAvoidGlobalFunctions" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalVars" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCConfiguration.Should pass PSAvoidGlobalVars" time="0.0132" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidInvokingEmptyMembers" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCConfiguration.Should pass PSAvoidInvokingEmptyMembers" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidNullOrEmptyHelpMessageAttribute" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCConfiguration.Should pass PSAvoidNullOrEmptyHelpMessageAttribute" time="0.0131" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingPositionalParameters" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCConfiguration.Should pass PSAvoidUsingPositionalParameters" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSReservedCmdletChar" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCConfiguration.Should pass PSReservedCmdletChar" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSReservedParams" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCConfiguration.Should pass PSReservedParams" time="0.0131" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidShouldContinueWithoutForce" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCConfiguration.Should pass PSAvoidShouldContinueWithoutForce" time="0.0079" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidTrailingWhitespace" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCConfiguration.Should pass PSAvoidTrailingWhitespace" time="0.013" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingUserNameAndPassWordParams" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCConfiguration.Should pass PSAvoidUsingUserNameAndPassWordParams" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingComputerNameHardcoded" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCConfiguration.Should pass PSAvoidUsingComputerNameHardcoded" time="0.013" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingConvertToSecureStringWithPlainText" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCConfiguration.Should pass PSAvoidUsingConvertToSecureStringWithPlainText" time="0.0075" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingDeprecatedManifestFields" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCConfiguration.Should pass PSAvoidUsingDeprecatedManifestFields" time="0.0131" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingInvokeExpression" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCConfiguration.Should pass PSAvoidUsingInvokeExpression" time="0.0132" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingPlainTextForPassword" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCConfiguration.Should pass PSAvoidUsingPlainTextForPassword" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingWMICmdlet" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCConfiguration.Should pass PSAvoidUsingWMICmdlet" time="0.0133" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingWriteHost" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCConfiguration.Should pass PSAvoidUsingWriteHost" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSMisleadingBacktick" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCConfiguration.Should pass PSMisleadingBacktick" time="0.0132" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSMissingModuleManifestField" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCConfiguration.Should pass PSMissingModuleManifestField" time="0.0132" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPlaceCloseBrace" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCConfiguration.Should pass PSPlaceCloseBrace" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPlaceOpenBrace" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCConfiguration.Should pass PSPlaceOpenBrace" time="0.0129" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectComparisonWithNull" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCConfiguration.Should pass PSPossibleIncorrectComparisonWithNull" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectUsageOfAssignmentOperator" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCConfiguration.Should pass PSPossibleIncorrectUsageOfAssignmentOperator" time="0.0133" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectUsageOfRedirectionOperator" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCConfiguration.Should pass PSPossibleIncorrectUsageOfRedirectionOperator" time="0.0139" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSProvideCommentHelp" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCConfiguration.Should pass PSProvideCommentHelp" time="0.008" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseApprovedVerbs" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCConfiguration.Should pass PSUseApprovedVerbs" time="0.0203" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseBOMForUnicodeEncodedFile" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCConfiguration.Should pass PSUseBOMForUnicodeEncodedFile" time="0.0079" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseCmdletCorrectly" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCConfiguration.Should pass PSUseCmdletCorrectly" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseCompatibleCmdlets" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCConfiguration.Should pass PSUseCompatibleCmdlets" time="0.0143" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseConsistentIndentation" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCConfiguration.Should pass PSUseConsistentIndentation" time="0.0119" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseConsistentWhitespace" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCConfiguration.Should pass PSUseConsistentWhitespace" time="0.02" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseDeclaredVarsMoreThanAssignments" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCConfiguration.Should pass PSUseDeclaredVarsMoreThanAssignments" time="0.0127" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseLiteralInitializerForHashtable" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCConfiguration.Should pass PSUseLiteralInitializerForHashtable" time="0.0158" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseOutputTypeCorrectly" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCConfiguration.Should pass PSUseOutputTypeCorrectly" time="0.0088" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUsePSCredentialType" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCConfiguration.Should pass PSUsePSCredentialType" time="0.0082" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSShouldProcess" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCConfiguration.Should pass PSShouldProcess" time="0.0164" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseShouldProcessForStateChangingFunctions" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCConfiguration.Should pass PSUseShouldProcessForStateChangingFunctions" time="0.0085" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseSingularNouns" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCConfiguration.Should pass PSUseSingularNouns" time="0.0145" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseSupportsShouldProcess" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCConfiguration.Should pass PSUseSupportsShouldProcess" time="0.0147" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseToExportFieldsInManifest" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCConfiguration.Should pass PSUseToExportFieldsInManifest" time="0.008" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseUTF8EncodingForHelpFile" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCConfiguration.Should pass PSUseUTF8EncodingForHelpFile" time="0.0138" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCDscExamplesPresent" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCConfiguration.Should pass PSDSCDscExamplesPresent" time="0.008" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCDscTestsPresent" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCConfiguration.Should pass PSDSCDscTestsPresent" time="0.0138" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCReturnCorrectTypesForDSCFunctions" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCConfiguration.Should pass PSDSCReturnCorrectTypesForDSCFunctions" time="0.008" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseIdenticalMandatoryParametersForDSC" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCConfiguration.Should pass PSDSCUseIdenticalMandatoryParametersForDSC" time="0.0139" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseIdenticalParametersForDSC" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCConfiguration.Should pass PSDSCUseIdenticalParametersForDSC" time="0.0137" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCStandardDSCFunctionsInResource" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCConfiguration.Should pass PSDSCStandardDSCFunctionsInResource" time="0.0088" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseVerboseMessageInDSCResource" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCConfiguration.Should pass PSDSCUseVerboseMessageInDSCResource" time="0.0138" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Analyzing Test-PSDCElevated" executed="True" result="Success" success="True" time="0.7112" asserts="0" description="Analyzing Test-PSDCElevated">
                <results>
                  <test-case description="Should pass PSAlignAssignmentStatement" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCElevated.Should pass PSAlignAssignmentStatement" time="0.1068" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingCmdletAliases" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCElevated.Should pass PSAvoidUsingCmdletAliases" time="0.0084" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidAssignmentToAutomaticVariable" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCElevated.Should pass PSAvoidAssignmentToAutomaticVariable" time="0.0082" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidDefaultValueSwitchParameter" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCElevated.Should pass PSAvoidDefaultValueSwitchParameter" time="0.0134" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidDefaultValueForMandatoryParameter" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCElevated.Should pass PSAvoidDefaultValueForMandatoryParameter" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingEmptyCatchBlock" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCElevated.Should pass PSAvoidUsingEmptyCatchBlock" time="0.0136" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalAliases" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCElevated.Should pass PSAvoidGlobalAliases" time="0.0132" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalFunctions" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCElevated.Should pass PSAvoidGlobalFunctions" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidGlobalVars" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCElevated.Should pass PSAvoidGlobalVars" time="0.0138" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidInvokingEmptyMembers" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCElevated.Should pass PSAvoidInvokingEmptyMembers" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidNullOrEmptyHelpMessageAttribute" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCElevated.Should pass PSAvoidNullOrEmptyHelpMessageAttribute" time="0.0136" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingPositionalParameters" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCElevated.Should pass PSAvoidUsingPositionalParameters" time="0.0134" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSReservedCmdletChar" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCElevated.Should pass PSReservedCmdletChar" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSReservedParams" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCElevated.Should pass PSReservedParams" time="0.0134" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidShouldContinueWithoutForce" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCElevated.Should pass PSAvoidShouldContinueWithoutForce" time="0.0079" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidTrailingWhitespace" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCElevated.Should pass PSAvoidTrailingWhitespace" time="0.0137" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingUserNameAndPassWordParams" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCElevated.Should pass PSAvoidUsingUserNameAndPassWordParams" time="0.0079" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingComputerNameHardcoded" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCElevated.Should pass PSAvoidUsingComputerNameHardcoded" time="0.0132" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingConvertToSecureStringWithPlainText" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCElevated.Should pass PSAvoidUsingConvertToSecureStringWithPlainText" time="0.0132" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingDeprecatedManifestFields" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCElevated.Should pass PSAvoidUsingDeprecatedManifestFields" time="0.0079" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingInvokeExpression" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCElevated.Should pass PSAvoidUsingInvokeExpression" time="0.014" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingPlainTextForPassword" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCElevated.Should pass PSAvoidUsingPlainTextForPassword" time="0.0084" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingWMICmdlet" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCElevated.Should pass PSAvoidUsingWMICmdlet" time="0.0135" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSAvoidUsingWriteHost" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCElevated.Should pass PSAvoidUsingWriteHost" time="0.0133" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSMisleadingBacktick" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCElevated.Should pass PSMisleadingBacktick" time="0.0081" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSMissingModuleManifestField" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCElevated.Should pass PSMissingModuleManifestField" time="0.0136" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPlaceCloseBrace" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCElevated.Should pass PSPlaceCloseBrace" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPlaceOpenBrace" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCElevated.Should pass PSPlaceOpenBrace" time="0.0134" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectComparisonWithNull" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCElevated.Should pass PSPossibleIncorrectComparisonWithNull" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectUsageOfAssignmentOperator" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCElevated.Should pass PSPossibleIncorrectUsageOfAssignmentOperator" time="0.0133" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSPossibleIncorrectUsageOfRedirectionOperator" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCElevated.Should pass PSPossibleIncorrectUsageOfRedirectionOperator" time="0.0133" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSProvideCommentHelp" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCElevated.Should pass PSProvideCommentHelp" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseApprovedVerbs" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCElevated.Should pass PSUseApprovedVerbs" time="0.0132" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseBOMForUnicodeEncodedFile" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCElevated.Should pass PSUseBOMForUnicodeEncodedFile" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseCmdletCorrectly" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCElevated.Should pass PSUseCmdletCorrectly" time="0.0131" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseCompatibleCmdlets" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCElevated.Should pass PSUseCompatibleCmdlets" time="0.0137" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseConsistentIndentation" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCElevated.Should pass PSUseConsistentIndentation" time="0.0097" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseConsistentWhitespace" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCElevated.Should pass PSUseConsistentWhitespace" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseDeclaredVarsMoreThanAssignments" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCElevated.Should pass PSUseDeclaredVarsMoreThanAssignments" time="0.0088" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseLiteralInitializerForHashtable" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCElevated.Should pass PSUseLiteralInitializerForHashtable" time="0.019" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseOutputTypeCorrectly" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCElevated.Should pass PSUseOutputTypeCorrectly" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUsePSCredentialType" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCElevated.Should pass PSUsePSCredentialType" time="0.0131" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSShouldProcess" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCElevated.Should pass PSShouldProcess" time="0.0128" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseShouldProcessForStateChangingFunctions" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCElevated.Should pass PSUseShouldProcessForStateChangingFunctions" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseSingularNouns" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCElevated.Should pass PSUseSingularNouns" time="0.0128" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseSupportsShouldProcess" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCElevated.Should pass PSUseSupportsShouldProcess" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseToExportFieldsInManifest" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCElevated.Should pass PSUseToExportFieldsInManifest" time="0.0133" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSUseUTF8EncodingForHelpFile" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCElevated.Should pass PSUseUTF8EncodingForHelpFile" time="0.0129" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCDscExamplesPresent" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCElevated.Should pass PSDSCDscExamplesPresent" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCDscTestsPresent" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCElevated.Should pass PSDSCDscTestsPresent" time="0.0131" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCReturnCorrectTypesForDSCFunctions" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCElevated.Should pass PSDSCReturnCorrectTypesForDSCFunctions" time="0.0079" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseIdenticalMandatoryParametersForDSC" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCElevated.Should pass PSDSCUseIdenticalMandatoryParametersForDSC" time="0.0127" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseIdenticalParametersForDSC" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCElevated.Should pass PSDSCUseIdenticalParametersForDSC" time="0.013" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCStandardDSCFunctionsInResource" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCElevated.Should pass PSDSCStandardDSCFunctionsInResource" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass PSDSCUseVerboseMessageInDSCResource" name="Invoking PSScriptAnalyzer against commandbase.Analyzing Test-PSDCElevated.Should pass PSDSCUseVerboseMessageInDSCResource" time="0.0129" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>